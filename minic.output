Grammar

    0 $accept: program $end

    1 program: ExtDefList

    2 ExtDefList: /* empty */
    3           | ExtDef ExtDefList

    4 ExtDef: Specifier ExtDecList SEMI
    5       | Specifier FuncDec CompSt
    6       | StructDec SEMI
    7       | error SEMI

    8 StructDec: STRUCT ID LC StructDefList RC

    9 Specifier: TYPE
   10          | STRUCT ID
   11          | TYPE LM RM

   12 ExtDecList: VarDec
   13           | VarDec COMMA ExtDecList

   14 VarDec: ID

   15 FuncDec: ID LP VarList RP
   16        | ID LP RP

   17 VarList: ParamDec
   18        | ParamDec COMMA VarList

   19 ParamDec: Specifier VarDec

   20 CompSt: LC DefList StmList RC

   21 StmList: /* empty */
   22        | Stmt StmList

   23 Stmt: Exp SEMI
   24     | CompSt
   25     | RETURN Exp SEMI
   26     | IF LP Exp RP Stmt
   27     | IF LP Exp RP Stmt ELSE Stmt
   28     | WHILE LP Exp RP Stmt
   29     | FOR LP ForCondition RP Stmt

   30 DefList: /* empty */
   31        | Def DefList

   32 StructDefList: /* empty */
   33              | StructDef StructDefList

   34 Def: Specifier DecList SEMI

   35 StructDef: Specifier StructList SEMI

   36 DecList: Dec
   37        | Dec COMMA DecList

   38 StructList: VarDec
   39           | VarDec COMMA StructList

   40 Dec: VarDec
   41    | VarDec ASSIGNOP Exp

   42 Exp: Exp ASSIGNOP Exp
   43    | Exp AND Exp
   44    | Exp OR Exp
   45    | Exp RELOP Exp
   46    | Exp PLUS Exp
   47    | Exp MINUS Exp
   48    | Exp STAR Exp
   49    | Exp DIV Exp
   50    | LP Exp RP
   51    | MINUS Exp
   52    | NOT Exp
   53    | ID LP Args RP
   54    | ID LP RP
   55    | ID
   56    | INT
   57    | FLOAT
   58    | CHAR
   59    | ID DECREMENT
   60    | ID INCREMENT
   61    | ID DOT ID
   62    | ID LM Exp RM
   63    | BREAK
   64    | CONTINUE

   65 Args: Exp COMMA Args
   66     | Exp

   67 ForCondition: Exp SEMI Exp SEMI Exp


Terminals, with rules where they appear

$end (0) 0
error (256) 7
INT (258) 56
ID (259) 8 10 14 15 16 53 54 55 59 60 61 62
RELOP (260) 45
TYPE (261) 9 11
FLOAT (262) 57
CHAR (263) 58
LP (264) 15 16 26 27 28 29 50 53 54
RP (265) 15 16 26 27 28 29 50 53 54
LC (266) 8 20
RC (267) 8 20
SEMI (268) 4 6 7 23 25 34 35 67
COMMA (269) 13 18 37 39 65
LM (270) 11 62
RM (271) 11 62
PLUS (272) 46
MINUS (273) 47 51
STAR (274) 48
DIV (275) 49
ASSIGNOP (276) 41 42
AND (277) 43
OR (278) 44
NOT (279) 52
IF (280) 26 27
ELSE (281) 27
WHILE (282) 28
RETURN (283) 25
INCREMENT (284) 60
DECREMENT (285) 59
STRUCT (286) 8 10
FOR (287) 29
DOT (288) 61
BREAK (289) 63
CONTINUE (290) 64
UMINUS (291)
LOWER_THEN_ELSE (292)


Nonterminals, with rules where they appear

$accept (38)
    on left: 0
program (39)
    on left: 1, on right: 0
ExtDefList (40)
    on left: 2 3, on right: 1 3
ExtDef (41)
    on left: 4 5 6 7, on right: 3
StructDec (42)
    on left: 8, on right: 6
Specifier (43)
    on left: 9 10 11, on right: 4 5 19 34 35
ExtDecList (44)
    on left: 12 13, on right: 4 13
VarDec (45)
    on left: 14, on right: 12 13 19 38 39 40 41
FuncDec (46)
    on left: 15 16, on right: 5
VarList (47)
    on left: 17 18, on right: 15 18
ParamDec (48)
    on left: 19, on right: 17 18
CompSt (49)
    on left: 20, on right: 5 24
StmList (50)
    on left: 21 22, on right: 20 22
Stmt (51)
    on left: 23 24 25 26 27 28 29, on right: 22 26 27 28 29
DefList (52)
    on left: 30 31, on right: 20 31
StructDefList (53)
    on left: 32 33, on right: 8 33
Def (54)
    on left: 34, on right: 31
StructDef (55)
    on left: 35, on right: 33
DecList (56)
    on left: 36 37, on right: 34 37
StructList (57)
    on left: 38 39, on right: 35 39
Dec (58)
    on left: 40 41, on right: 36 37
Exp (59)
    on left: 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59
    60 61 62 63 64, on right: 23 25 26 27 28 41 42 43 44 45 46 47 48
    49 50 51 52 62 65 66 67
Args (60)
    on left: 65 66, on right: 53 65
ForCondition (61)
    on left: 67, on right: 29


state 0

    0 $accept: . program $end

    error   shift, and go to state 1
    TYPE    shift, and go to state 2
    STRUCT  shift, and go to state 3

    $end  reduce using rule 2 (ExtDefList)

    program     go to state 4
    ExtDefList  go to state 5
    ExtDef      go to state 6
    StructDec   go to state 7
    Specifier   go to state 8


state 1

    7 ExtDef: error . SEMI

    SEMI  shift, and go to state 9


state 2

    9 Specifier: TYPE .
   11          | TYPE . LM RM

    LM  shift, and go to state 10

    $default  reduce using rule 9 (Specifier)


state 3

    8 StructDec: STRUCT . ID LC StructDefList RC
   10 Specifier: STRUCT . ID

    ID  shift, and go to state 11


state 4

    0 $accept: program . $end

    $end  shift, and go to state 12


state 5

    1 program: ExtDefList .

    $default  reduce using rule 1 (program)


state 6

    3 ExtDefList: ExtDef . ExtDefList

    error   shift, and go to state 1
    TYPE    shift, and go to state 2
    STRUCT  shift, and go to state 3

    $end  reduce using rule 2 (ExtDefList)

    ExtDefList  go to state 13
    ExtDef      go to state 6
    StructDec   go to state 7
    Specifier   go to state 8


state 7

    6 ExtDef: StructDec . SEMI

    SEMI  shift, and go to state 14


state 8

    4 ExtDef: Specifier . ExtDecList SEMI
    5       | Specifier . FuncDec CompSt

    ID  shift, and go to state 15

    ExtDecList  go to state 16
    VarDec      go to state 17
    FuncDec     go to state 18


state 9

    7 ExtDef: error SEMI .

    $default  reduce using rule 7 (ExtDef)


state 10

   11 Specifier: TYPE LM . RM

    RM  shift, and go to state 19


state 11

    8 StructDec: STRUCT ID . LC StructDefList RC
   10 Specifier: STRUCT ID .

    LC  shift, and go to state 20

    $default  reduce using rule 10 (Specifier)


state 12

    0 $accept: program $end .

    $default  accept


state 13

    3 ExtDefList: ExtDef ExtDefList .

    $default  reduce using rule 3 (ExtDefList)


state 14

    6 ExtDef: StructDec SEMI .

    $default  reduce using rule 6 (ExtDef)


state 15

   14 VarDec: ID .
   15 FuncDec: ID . LP VarList RP
   16        | ID . LP RP

    LP  shift, and go to state 21

    $default  reduce using rule 14 (VarDec)


state 16

    4 ExtDef: Specifier ExtDecList . SEMI

    SEMI  shift, and go to state 22


state 17

   12 ExtDecList: VarDec .
   13           | VarDec . COMMA ExtDecList

    COMMA  shift, and go to state 23

    $default  reduce using rule 12 (ExtDecList)


state 18

    5 ExtDef: Specifier FuncDec . CompSt

    LC  shift, and go to state 24

    CompSt  go to state 25


state 19

   11 Specifier: TYPE LM RM .

    $default  reduce using rule 11 (Specifier)


state 20

    8 StructDec: STRUCT ID LC . StructDefList RC

    TYPE    shift, and go to state 2
    STRUCT  shift, and go to state 26

    $default  reduce using rule 32 (StructDefList)

    Specifier      go to state 27
    StructDefList  go to state 28
    StructDef      go to state 29


state 21

   15 FuncDec: ID LP . VarList RP
   16        | ID LP . RP

    TYPE    shift, and go to state 2
    RP      shift, and go to state 30
    STRUCT  shift, and go to state 26

    Specifier  go to state 31
    VarList    go to state 32
    ParamDec   go to state 33


state 22

    4 ExtDef: Specifier ExtDecList SEMI .

    $default  reduce using rule 4 (ExtDef)


state 23

   13 ExtDecList: VarDec COMMA . ExtDecList

    ID  shift, and go to state 34

    ExtDecList  go to state 35
    VarDec      go to state 17


state 24

   20 CompSt: LC . DefList StmList RC

    TYPE    shift, and go to state 2
    STRUCT  shift, and go to state 26

    $default  reduce using rule 30 (DefList)

    Specifier  go to state 36
    DefList    go to state 37
    Def        go to state 38


state 25

    5 ExtDef: Specifier FuncDec CompSt .

    $default  reduce using rule 5 (ExtDef)


state 26

   10 Specifier: STRUCT . ID

    ID  shift, and go to state 39


state 27

   35 StructDef: Specifier . StructList SEMI

    ID  shift, and go to state 34

    VarDec      go to state 40
    StructList  go to state 41


state 28

    8 StructDec: STRUCT ID LC StructDefList . RC

    RC  shift, and go to state 42


state 29

   33 StructDefList: StructDef . StructDefList

    TYPE    shift, and go to state 2
    STRUCT  shift, and go to state 26

    $default  reduce using rule 32 (StructDefList)

    Specifier      go to state 27
    StructDefList  go to state 43
    StructDef      go to state 29


state 30

   16 FuncDec: ID LP RP .

    $default  reduce using rule 16 (FuncDec)


state 31

   19 ParamDec: Specifier . VarDec

    ID  shift, and go to state 34

    VarDec  go to state 44


state 32

   15 FuncDec: ID LP VarList . RP

    RP  shift, and go to state 45


state 33

   17 VarList: ParamDec .
   18        | ParamDec . COMMA VarList

    COMMA  shift, and go to state 46

    $default  reduce using rule 17 (VarList)


state 34

   14 VarDec: ID .

    $default  reduce using rule 14 (VarDec)


state 35

   13 ExtDecList: VarDec COMMA ExtDecList .

    $default  reduce using rule 13 (ExtDecList)


state 36

   34 Def: Specifier . DecList SEMI

    ID  shift, and go to state 34

    VarDec   go to state 47
    DecList  go to state 48
    Dec      go to state 49


state 37

   20 CompSt: LC DefList . StmList RC

    INT       shift, and go to state 50
    ID        shift, and go to state 51
    FLOAT     shift, and go to state 52
    CHAR      shift, and go to state 53
    LP        shift, and go to state 54
    LC        shift, and go to state 24
    MINUS     shift, and go to state 55
    NOT       shift, and go to state 56
    IF        shift, and go to state 57
    WHILE     shift, and go to state 58
    RETURN    shift, and go to state 59
    FOR       shift, and go to state 60
    BREAK     shift, and go to state 61
    CONTINUE  shift, and go to state 62

    $default  reduce using rule 21 (StmList)

    CompSt   go to state 63
    StmList  go to state 64
    Stmt     go to state 65
    Exp      go to state 66


state 38

   31 DefList: Def . DefList

    TYPE    shift, and go to state 2
    STRUCT  shift, and go to state 26

    $default  reduce using rule 30 (DefList)

    Specifier  go to state 36
    DefList    go to state 67
    Def        go to state 38


state 39

   10 Specifier: STRUCT ID .

    $default  reduce using rule 10 (Specifier)


state 40

   38 StructList: VarDec .
   39           | VarDec . COMMA StructList

    COMMA  shift, and go to state 68

    $default  reduce using rule 38 (StructList)


state 41

   35 StructDef: Specifier StructList . SEMI

    SEMI  shift, and go to state 69


state 42

    8 StructDec: STRUCT ID LC StructDefList RC .

    $default  reduce using rule 8 (StructDec)


state 43

   33 StructDefList: StructDef StructDefList .

    $default  reduce using rule 33 (StructDefList)


state 44

   19 ParamDec: Specifier VarDec .

    $default  reduce using rule 19 (ParamDec)


state 45

   15 FuncDec: ID LP VarList RP .

    $default  reduce using rule 15 (FuncDec)


state 46

   18 VarList: ParamDec COMMA . VarList

    TYPE    shift, and go to state 2
    STRUCT  shift, and go to state 26

    Specifier  go to state 31
    VarList    go to state 70
    ParamDec   go to state 33


state 47

   40 Dec: VarDec .
   41    | VarDec . ASSIGNOP Exp

    ASSIGNOP  shift, and go to state 71

    $default  reduce using rule 40 (Dec)


state 48

   34 Def: Specifier DecList . SEMI

    SEMI  shift, and go to state 72


state 49

   36 DecList: Dec .
   37        | Dec . COMMA DecList

    COMMA  shift, and go to state 73

    $default  reduce using rule 36 (DecList)


state 50

   56 Exp: INT .

    $default  reduce using rule 56 (Exp)


state 51

   53 Exp: ID . LP Args RP
   54    | ID . LP RP
   55    | ID .
   59    | ID . DECREMENT
   60    | ID . INCREMENT
   61    | ID . DOT ID
   62    | ID . LM Exp RM

    LP         shift, and go to state 74
    LM         shift, and go to state 75
    INCREMENT  shift, and go to state 76
    DECREMENT  shift, and go to state 77
    DOT        shift, and go to state 78

    $default  reduce using rule 55 (Exp)


state 52

   57 Exp: FLOAT .

    $default  reduce using rule 57 (Exp)


state 53

   58 Exp: CHAR .

    $default  reduce using rule 58 (Exp)


state 54

   50 Exp: LP . Exp RP

    INT       shift, and go to state 50
    ID        shift, and go to state 51
    FLOAT     shift, and go to state 52
    CHAR      shift, and go to state 53
    LP        shift, and go to state 54
    MINUS     shift, and go to state 55
    NOT       shift, and go to state 56
    BREAK     shift, and go to state 61
    CONTINUE  shift, and go to state 62

    Exp  go to state 79


state 55

   51 Exp: MINUS . Exp

    INT       shift, and go to state 50
    ID        shift, and go to state 51
    FLOAT     shift, and go to state 52
    CHAR      shift, and go to state 53
    LP        shift, and go to state 54
    MINUS     shift, and go to state 55
    NOT       shift, and go to state 56
    BREAK     shift, and go to state 61
    CONTINUE  shift, and go to state 62

    Exp  go to state 80


state 56

   52 Exp: NOT . Exp

    INT       shift, and go to state 50
    ID        shift, and go to state 51
    FLOAT     shift, and go to state 52
    CHAR      shift, and go to state 53
    LP        shift, and go to state 54
    MINUS     shift, and go to state 55
    NOT       shift, and go to state 56
    BREAK     shift, and go to state 61
    CONTINUE  shift, and go to state 62

    Exp  go to state 81


state 57

   26 Stmt: IF . LP Exp RP Stmt
   27     | IF . LP Exp RP Stmt ELSE Stmt

    LP  shift, and go to state 82


state 58

   28 Stmt: WHILE . LP Exp RP Stmt

    LP  shift, and go to state 83


state 59

   25 Stmt: RETURN . Exp SEMI

    INT       shift, and go to state 50
    ID        shift, and go to state 51
    FLOAT     shift, and go to state 52
    CHAR      shift, and go to state 53
    LP        shift, and go to state 54
    MINUS     shift, and go to state 55
    NOT       shift, and go to state 56
    BREAK     shift, and go to state 61
    CONTINUE  shift, and go to state 62

    Exp  go to state 84


state 60

   29 Stmt: FOR . LP ForCondition RP Stmt

    LP  shift, and go to state 85


state 61

   63 Exp: BREAK .

    $default  reduce using rule 63 (Exp)


state 62

   64 Exp: CONTINUE .

    $default  reduce using rule 64 (Exp)


state 63

   24 Stmt: CompSt .

    $default  reduce using rule 24 (Stmt)


state 64

   20 CompSt: LC DefList StmList . RC

    RC  shift, and go to state 86


state 65

   22 StmList: Stmt . StmList

    INT       shift, and go to state 50
    ID        shift, and go to state 51
    FLOAT     shift, and go to state 52
    CHAR      shift, and go to state 53
    LP        shift, and go to state 54
    LC        shift, and go to state 24
    MINUS     shift, and go to state 55
    NOT       shift, and go to state 56
    IF        shift, and go to state 57
    WHILE     shift, and go to state 58
    RETURN    shift, and go to state 59
    FOR       shift, and go to state 60
    BREAK     shift, and go to state 61
    CONTINUE  shift, and go to state 62

    $default  reduce using rule 21 (StmList)

    CompSt   go to state 63
    StmList  go to state 87
    Stmt     go to state 65
    Exp      go to state 66


state 66

   23 Stmt: Exp . SEMI
   42 Exp: Exp . ASSIGNOP Exp
   43    | Exp . AND Exp
   44    | Exp . OR Exp
   45    | Exp . RELOP Exp
   46    | Exp . PLUS Exp
   47    | Exp . MINUS Exp
   48    | Exp . STAR Exp
   49    | Exp . DIV Exp

    RELOP     shift, and go to state 88
    SEMI      shift, and go to state 89
    PLUS      shift, and go to state 90
    MINUS     shift, and go to state 91
    STAR      shift, and go to state 92
    DIV       shift, and go to state 93
    ASSIGNOP  shift, and go to state 94
    AND       shift, and go to state 95
    OR        shift, and go to state 96


state 67

   31 DefList: Def DefList .

    $default  reduce using rule 31 (DefList)


state 68

   39 StructList: VarDec COMMA . StructList

    ID  shift, and go to state 34

    VarDec      go to state 40
    StructList  go to state 97


state 69

   35 StructDef: Specifier StructList SEMI .

    $default  reduce using rule 35 (StructDef)


state 70

   18 VarList: ParamDec COMMA VarList .

    $default  reduce using rule 18 (VarList)


state 71

   41 Dec: VarDec ASSIGNOP . Exp

    INT       shift, and go to state 50
    ID        shift, and go to state 51
    FLOAT     shift, and go to state 52
    CHAR      shift, and go to state 53
    LP        shift, and go to state 54
    MINUS     shift, and go to state 55
    NOT       shift, and go to state 56
    BREAK     shift, and go to state 61
    CONTINUE  shift, and go to state 62

    Exp  go to state 98


state 72

   34 Def: Specifier DecList SEMI .

    $default  reduce using rule 34 (Def)


state 73

   37 DecList: Dec COMMA . DecList

    ID  shift, and go to state 34

    VarDec   go to state 47
    DecList  go to state 99
    Dec      go to state 49


state 74

   53 Exp: ID LP . Args RP
   54    | ID LP . RP

    INT       shift, and go to state 50
    ID        shift, and go to state 51
    FLOAT     shift, and go to state 52
    CHAR      shift, and go to state 53
    LP        shift, and go to state 54
    RP        shift, and go to state 100
    MINUS     shift, and go to state 55
    NOT       shift, and go to state 56
    BREAK     shift, and go to state 61
    CONTINUE  shift, and go to state 62

    Exp   go to state 101
    Args  go to state 102


state 75

   62 Exp: ID LM . Exp RM

    INT       shift, and go to state 50
    ID        shift, and go to state 51
    FLOAT     shift, and go to state 52
    CHAR      shift, and go to state 53
    LP        shift, and go to state 54
    MINUS     shift, and go to state 55
    NOT       shift, and go to state 56
    BREAK     shift, and go to state 61
    CONTINUE  shift, and go to state 62

    Exp  go to state 103


state 76

   60 Exp: ID INCREMENT .

    $default  reduce using rule 60 (Exp)


state 77

   59 Exp: ID DECREMENT .

    $default  reduce using rule 59 (Exp)


state 78

   61 Exp: ID DOT . ID

    ID  shift, and go to state 104


state 79

   42 Exp: Exp . ASSIGNOP Exp
   43    | Exp . AND Exp
   44    | Exp . OR Exp
   45    | Exp . RELOP Exp
   46    | Exp . PLUS Exp
   47    | Exp . MINUS Exp
   48    | Exp . STAR Exp
   49    | Exp . DIV Exp
   50    | LP Exp . RP

    RELOP     shift, and go to state 88
    RP        shift, and go to state 105
    PLUS      shift, and go to state 90
    MINUS     shift, and go to state 91
    STAR      shift, and go to state 92
    DIV       shift, and go to state 93
    ASSIGNOP  shift, and go to state 94
    AND       shift, and go to state 95
    OR        shift, and go to state 96


state 80

   42 Exp: Exp . ASSIGNOP Exp
   43    | Exp . AND Exp
   44    | Exp . OR Exp
   45    | Exp . RELOP Exp
   46    | Exp . PLUS Exp
   47    | Exp . MINUS Exp
   48    | Exp . STAR Exp
   49    | Exp . DIV Exp
   51    | MINUS Exp .

    $default  reduce using rule 51 (Exp)


state 81

   42 Exp: Exp . ASSIGNOP Exp
   43    | Exp . AND Exp
   44    | Exp . OR Exp
   45    | Exp . RELOP Exp
   46    | Exp . PLUS Exp
   47    | Exp . MINUS Exp
   48    | Exp . STAR Exp
   49    | Exp . DIV Exp
   52    | NOT Exp .

    $default  reduce using rule 52 (Exp)


state 82

   26 Stmt: IF LP . Exp RP Stmt
   27     | IF LP . Exp RP Stmt ELSE Stmt

    INT       shift, and go to state 50
    ID        shift, and go to state 51
    FLOAT     shift, and go to state 52
    CHAR      shift, and go to state 53
    LP        shift, and go to state 54
    MINUS     shift, and go to state 55
    NOT       shift, and go to state 56
    BREAK     shift, and go to state 61
    CONTINUE  shift, and go to state 62

    Exp  go to state 106


state 83

   28 Stmt: WHILE LP . Exp RP Stmt

    INT       shift, and go to state 50
    ID        shift, and go to state 51
    FLOAT     shift, and go to state 52
    CHAR      shift, and go to state 53
    LP        shift, and go to state 54
    MINUS     shift, and go to state 55
    NOT       shift, and go to state 56
    BREAK     shift, and go to state 61
    CONTINUE  shift, and go to state 62

    Exp  go to state 107


state 84

   25 Stmt: RETURN Exp . SEMI
   42 Exp: Exp . ASSIGNOP Exp
   43    | Exp . AND Exp
   44    | Exp . OR Exp
   45    | Exp . RELOP Exp
   46    | Exp . PLUS Exp
   47    | Exp . MINUS Exp
   48    | Exp . STAR Exp
   49    | Exp . DIV Exp

    RELOP     shift, and go to state 88
    SEMI      shift, and go to state 108
    PLUS      shift, and go to state 90
    MINUS     shift, and go to state 91
    STAR      shift, and go to state 92
    DIV       shift, and go to state 93
    ASSIGNOP  shift, and go to state 94
    AND       shift, and go to state 95
    OR        shift, and go to state 96


state 85

   29 Stmt: FOR LP . ForCondition RP Stmt

    INT       shift, and go to state 50
    ID        shift, and go to state 51
    FLOAT     shift, and go to state 52
    CHAR      shift, and go to state 53
    LP        shift, and go to state 54
    MINUS     shift, and go to state 55
    NOT       shift, and go to state 56
    BREAK     shift, and go to state 61
    CONTINUE  shift, and go to state 62

    Exp           go to state 109
    ForCondition  go to state 110


state 86

   20 CompSt: LC DefList StmList RC .

    $default  reduce using rule 20 (CompSt)


state 87

   22 StmList: Stmt StmList .

    $default  reduce using rule 22 (StmList)


state 88

   45 Exp: Exp RELOP . Exp

    INT       shift, and go to state 50
    ID        shift, and go to state 51
    FLOAT     shift, and go to state 52
    CHAR      shift, and go to state 53
    LP        shift, and go to state 54
    MINUS     shift, and go to state 55
    NOT       shift, and go to state 56
    BREAK     shift, and go to state 61
    CONTINUE  shift, and go to state 62

    Exp  go to state 111


state 89

   23 Stmt: Exp SEMI .

    $default  reduce using rule 23 (Stmt)


state 90

   46 Exp: Exp PLUS . Exp

    INT       shift, and go to state 50
    ID        shift, and go to state 51
    FLOAT     shift, and go to state 52
    CHAR      shift, and go to state 53
    LP        shift, and go to state 54
    MINUS     shift, and go to state 55
    NOT       shift, and go to state 56
    BREAK     shift, and go to state 61
    CONTINUE  shift, and go to state 62

    Exp  go to state 112


state 91

   47 Exp: Exp MINUS . Exp

    INT       shift, and go to state 50
    ID        shift, and go to state 51
    FLOAT     shift, and go to state 52
    CHAR      shift, and go to state 53
    LP        shift, and go to state 54
    MINUS     shift, and go to state 55
    NOT       shift, and go to state 56
    BREAK     shift, and go to state 61
    CONTINUE  shift, and go to state 62

    Exp  go to state 113


state 92

   48 Exp: Exp STAR . Exp

    INT       shift, and go to state 50
    ID        shift, and go to state 51
    FLOAT     shift, and go to state 52
    CHAR      shift, and go to state 53
    LP        shift, and go to state 54
    MINUS     shift, and go to state 55
    NOT       shift, and go to state 56
    BREAK     shift, and go to state 61
    CONTINUE  shift, and go to state 62

    Exp  go to state 114


state 93

   49 Exp: Exp DIV . Exp

    INT       shift, and go to state 50
    ID        shift, and go to state 51
    FLOAT     shift, and go to state 52
    CHAR      shift, and go to state 53
    LP        shift, and go to state 54
    MINUS     shift, and go to state 55
    NOT       shift, and go to state 56
    BREAK     shift, and go to state 61
    CONTINUE  shift, and go to state 62

    Exp  go to state 115


state 94

   42 Exp: Exp ASSIGNOP . Exp

    INT       shift, and go to state 50
    ID        shift, and go to state 51
    FLOAT     shift, and go to state 52
    CHAR      shift, and go to state 53
    LP        shift, and go to state 54
    MINUS     shift, and go to state 55
    NOT       shift, and go to state 56
    BREAK     shift, and go to state 61
    CONTINUE  shift, and go to state 62

    Exp  go to state 116


state 95

   43 Exp: Exp AND . Exp

    INT       shift, and go to state 50
    ID        shift, and go to state 51
    FLOAT     shift, and go to state 52
    CHAR      shift, and go to state 53
    LP        shift, and go to state 54
    MINUS     shift, and go to state 55
    NOT       shift, and go to state 56
    BREAK     shift, and go to state 61
    CONTINUE  shift, and go to state 62

    Exp  go to state 117


state 96

   44 Exp: Exp OR . Exp

    INT       shift, and go to state 50
    ID        shift, and go to state 51
    FLOAT     shift, and go to state 52
    CHAR      shift, and go to state 53
    LP        shift, and go to state 54
    MINUS     shift, and go to state 55
    NOT       shift, and go to state 56
    BREAK     shift, and go to state 61
    CONTINUE  shift, and go to state 62

    Exp  go to state 118


state 97

   39 StructList: VarDec COMMA StructList .

    $default  reduce using rule 39 (StructList)


state 98

   41 Dec: VarDec ASSIGNOP Exp .
   42 Exp: Exp . ASSIGNOP Exp
   43    | Exp . AND Exp
   44    | Exp . OR Exp
   45    | Exp . RELOP Exp
   46    | Exp . PLUS Exp
   47    | Exp . MINUS Exp
   48    | Exp . STAR Exp
   49    | Exp . DIV Exp

    RELOP     shift, and go to state 88
    PLUS      shift, and go to state 90
    MINUS     shift, and go to state 91
    STAR      shift, and go to state 92
    DIV       shift, and go to state 93
    ASSIGNOP  shift, and go to state 94
    AND       shift, and go to state 95
    OR        shift, and go to state 96

    $default  reduce using rule 41 (Dec)


state 99

   37 DecList: Dec COMMA DecList .

    $default  reduce using rule 37 (DecList)


state 100

   54 Exp: ID LP RP .

    $default  reduce using rule 54 (Exp)


state 101

   42 Exp: Exp . ASSIGNOP Exp
   43    | Exp . AND Exp
   44    | Exp . OR Exp
   45    | Exp . RELOP Exp
   46    | Exp . PLUS Exp
   47    | Exp . MINUS Exp
   48    | Exp . STAR Exp
   49    | Exp . DIV Exp
   65 Args: Exp . COMMA Args
   66     | Exp .

    RELOP     shift, and go to state 88
    COMMA     shift, and go to state 119
    PLUS      shift, and go to state 90
    MINUS     shift, and go to state 91
    STAR      shift, and go to state 92
    DIV       shift, and go to state 93
    ASSIGNOP  shift, and go to state 94
    AND       shift, and go to state 95
    OR        shift, and go to state 96

    $default  reduce using rule 66 (Args)


state 102

   53 Exp: ID LP Args . RP

    RP  shift, and go to state 120


state 103

   42 Exp: Exp . ASSIGNOP Exp
   43    | Exp . AND Exp
   44    | Exp . OR Exp
   45    | Exp . RELOP Exp
   46    | Exp . PLUS Exp
   47    | Exp . MINUS Exp
   48    | Exp . STAR Exp
   49    | Exp . DIV Exp
   62    | ID LM Exp . RM

    RELOP     shift, and go to state 88
    RM        shift, and go to state 121
    PLUS      shift, and go to state 90
    MINUS     shift, and go to state 91
    STAR      shift, and go to state 92
    DIV       shift, and go to state 93
    ASSIGNOP  shift, and go to state 94
    AND       shift, and go to state 95
    OR        shift, and go to state 96


state 104

   61 Exp: ID DOT ID .

    $default  reduce using rule 61 (Exp)


state 105

   50 Exp: LP Exp RP .

    $default  reduce using rule 50 (Exp)


state 106

   26 Stmt: IF LP Exp . RP Stmt
   27     | IF LP Exp . RP Stmt ELSE Stmt
   42 Exp: Exp . ASSIGNOP Exp
   43    | Exp . AND Exp
   44    | Exp . OR Exp
   45    | Exp . RELOP Exp
   46    | Exp . PLUS Exp
   47    | Exp . MINUS Exp
   48    | Exp . STAR Exp
   49    | Exp . DIV Exp

    RELOP     shift, and go to state 88
    RP        shift, and go to state 122
    PLUS      shift, and go to state 90
    MINUS     shift, and go to state 91
    STAR      shift, and go to state 92
    DIV       shift, and go to state 93
    ASSIGNOP  shift, and go to state 94
    AND       shift, and go to state 95
    OR        shift, and go to state 96


state 107

   28 Stmt: WHILE LP Exp . RP Stmt
   42 Exp: Exp . ASSIGNOP Exp
   43    | Exp . AND Exp
   44    | Exp . OR Exp
   45    | Exp . RELOP Exp
   46    | Exp . PLUS Exp
   47    | Exp . MINUS Exp
   48    | Exp . STAR Exp
   49    | Exp . DIV Exp

    RELOP     shift, and go to state 88
    RP        shift, and go to state 123
    PLUS      shift, and go to state 90
    MINUS     shift, and go to state 91
    STAR      shift, and go to state 92
    DIV       shift, and go to state 93
    ASSIGNOP  shift, and go to state 94
    AND       shift, and go to state 95
    OR        shift, and go to state 96


state 108

   25 Stmt: RETURN Exp SEMI .

    $default  reduce using rule 25 (Stmt)


state 109

   42 Exp: Exp . ASSIGNOP Exp
   43    | Exp . AND Exp
   44    | Exp . OR Exp
   45    | Exp . RELOP Exp
   46    | Exp . PLUS Exp
   47    | Exp . MINUS Exp
   48    | Exp . STAR Exp
   49    | Exp . DIV Exp
   67 ForCondition: Exp . SEMI Exp SEMI Exp

    RELOP     shift, and go to state 88
    SEMI      shift, and go to state 124
    PLUS      shift, and go to state 90
    MINUS     shift, and go to state 91
    STAR      shift, and go to state 92
    DIV       shift, and go to state 93
    ASSIGNOP  shift, and go to state 94
    AND       shift, and go to state 95
    OR        shift, and go to state 96


state 110

   29 Stmt: FOR LP ForCondition . RP Stmt

    RP  shift, and go to state 125


state 111

   42 Exp: Exp . ASSIGNOP Exp
   43    | Exp . AND Exp
   44    | Exp . OR Exp
   45    | Exp . RELOP Exp
   45    | Exp RELOP Exp .
   46    | Exp . PLUS Exp
   47    | Exp . MINUS Exp
   48    | Exp . STAR Exp
   49    | Exp . DIV Exp

    PLUS   shift, and go to state 90
    MINUS  shift, and go to state 91
    STAR   shift, and go to state 92
    DIV    shift, and go to state 93

    $default  reduce using rule 45 (Exp)


state 112

   42 Exp: Exp . ASSIGNOP Exp
   43    | Exp . AND Exp
   44    | Exp . OR Exp
   45    | Exp . RELOP Exp
   46    | Exp . PLUS Exp
   46    | Exp PLUS Exp .
   47    | Exp . MINUS Exp
   48    | Exp . STAR Exp
   49    | Exp . DIV Exp

    STAR  shift, and go to state 92
    DIV   shift, and go to state 93

    $default  reduce using rule 46 (Exp)


state 113

   42 Exp: Exp . ASSIGNOP Exp
   43    | Exp . AND Exp
   44    | Exp . OR Exp
   45    | Exp . RELOP Exp
   46    | Exp . PLUS Exp
   47    | Exp . MINUS Exp
   47    | Exp MINUS Exp .
   48    | Exp . STAR Exp
   49    | Exp . DIV Exp

    STAR  shift, and go to state 92
    DIV   shift, and go to state 93

    $default  reduce using rule 47 (Exp)


state 114

   42 Exp: Exp . ASSIGNOP Exp
   43    | Exp . AND Exp
   44    | Exp . OR Exp
   45    | Exp . RELOP Exp
   46    | Exp . PLUS Exp
   47    | Exp . MINUS Exp
   48    | Exp . STAR Exp
   48    | Exp STAR Exp .
   49    | Exp . DIV Exp

    $default  reduce using rule 48 (Exp)


state 115

   42 Exp: Exp . ASSIGNOP Exp
   43    | Exp . AND Exp
   44    | Exp . OR Exp
   45    | Exp . RELOP Exp
   46    | Exp . PLUS Exp
   47    | Exp . MINUS Exp
   48    | Exp . STAR Exp
   49    | Exp . DIV Exp
   49    | Exp DIV Exp .

    $default  reduce using rule 49 (Exp)


state 116

   42 Exp: Exp . ASSIGNOP Exp
   42    | Exp ASSIGNOP Exp .
   43    | Exp . AND Exp
   44    | Exp . OR Exp
   45    | Exp . RELOP Exp
   46    | Exp . PLUS Exp
   47    | Exp . MINUS Exp
   48    | Exp . STAR Exp
   49    | Exp . DIV Exp

    RELOP  shift, and go to state 88
    PLUS   shift, and go to state 90
    MINUS  shift, and go to state 91
    STAR   shift, and go to state 92
    DIV    shift, and go to state 93
    AND    shift, and go to state 95
    OR     shift, and go to state 96

    $default  reduce using rule 42 (Exp)


state 117

   42 Exp: Exp . ASSIGNOP Exp
   43    | Exp . AND Exp
   43    | Exp AND Exp .
   44    | Exp . OR Exp
   45    | Exp . RELOP Exp
   46    | Exp . PLUS Exp
   47    | Exp . MINUS Exp
   48    | Exp . STAR Exp
   49    | Exp . DIV Exp

    RELOP  shift, and go to state 88
    PLUS   shift, and go to state 90
    MINUS  shift, and go to state 91
    STAR   shift, and go to state 92
    DIV    shift, and go to state 93

    $default  reduce using rule 43 (Exp)


state 118

   42 Exp: Exp . ASSIGNOP Exp
   43    | Exp . AND Exp
   44    | Exp . OR Exp
   44    | Exp OR Exp .
   45    | Exp . RELOP Exp
   46    | Exp . PLUS Exp
   47    | Exp . MINUS Exp
   48    | Exp . STAR Exp
   49    | Exp . DIV Exp

    RELOP  shift, and go to state 88
    PLUS   shift, and go to state 90
    MINUS  shift, and go to state 91
    STAR   shift, and go to state 92
    DIV    shift, and go to state 93
    AND    shift, and go to state 95

    $default  reduce using rule 44 (Exp)


state 119

   65 Args: Exp COMMA . Args

    INT       shift, and go to state 50
    ID        shift, and go to state 51
    FLOAT     shift, and go to state 52
    CHAR      shift, and go to state 53
    LP        shift, and go to state 54
    MINUS     shift, and go to state 55
    NOT       shift, and go to state 56
    BREAK     shift, and go to state 61
    CONTINUE  shift, and go to state 62

    Exp   go to state 101
    Args  go to state 126


state 120

   53 Exp: ID LP Args RP .

    $default  reduce using rule 53 (Exp)


state 121

   62 Exp: ID LM Exp RM .

    $default  reduce using rule 62 (Exp)


state 122

   26 Stmt: IF LP Exp RP . Stmt
   27     | IF LP Exp RP . Stmt ELSE Stmt

    INT       shift, and go to state 50
    ID        shift, and go to state 51
    FLOAT     shift, and go to state 52
    CHAR      shift, and go to state 53
    LP        shift, and go to state 54
    LC        shift, and go to state 24
    MINUS     shift, and go to state 55
    NOT       shift, and go to state 56
    IF        shift, and go to state 57
    WHILE     shift, and go to state 58
    RETURN    shift, and go to state 59
    FOR       shift, and go to state 60
    BREAK     shift, and go to state 61
    CONTINUE  shift, and go to state 62

    CompSt  go to state 63
    Stmt    go to state 127
    Exp     go to state 66


state 123

   28 Stmt: WHILE LP Exp RP . Stmt

    INT       shift, and go to state 50
    ID        shift, and go to state 51
    FLOAT     shift, and go to state 52
    CHAR      shift, and go to state 53
    LP        shift, and go to state 54
    LC        shift, and go to state 24
    MINUS     shift, and go to state 55
    NOT       shift, and go to state 56
    IF        shift, and go to state 57
    WHILE     shift, and go to state 58
    RETURN    shift, and go to state 59
    FOR       shift, and go to state 60
    BREAK     shift, and go to state 61
    CONTINUE  shift, and go to state 62

    CompSt  go to state 63
    Stmt    go to state 128
    Exp     go to state 66


state 124

   67 ForCondition: Exp SEMI . Exp SEMI Exp

    INT       shift, and go to state 50
    ID        shift, and go to state 51
    FLOAT     shift, and go to state 52
    CHAR      shift, and go to state 53
    LP        shift, and go to state 54
    MINUS     shift, and go to state 55
    NOT       shift, and go to state 56
    BREAK     shift, and go to state 61
    CONTINUE  shift, and go to state 62

    Exp  go to state 129


state 125

   29 Stmt: FOR LP ForCondition RP . Stmt

    INT       shift, and go to state 50
    ID        shift, and go to state 51
    FLOAT     shift, and go to state 52
    CHAR      shift, and go to state 53
    LP        shift, and go to state 54
    LC        shift, and go to state 24
    MINUS     shift, and go to state 55
    NOT       shift, and go to state 56
    IF        shift, and go to state 57
    WHILE     shift, and go to state 58
    RETURN    shift, and go to state 59
    FOR       shift, and go to state 60
    BREAK     shift, and go to state 61
    CONTINUE  shift, and go to state 62

    CompSt  go to state 63
    Stmt    go to state 130
    Exp     go to state 66


state 126

   65 Args: Exp COMMA Args .

    $default  reduce using rule 65 (Args)


state 127

   26 Stmt: IF LP Exp RP Stmt .
   27     | IF LP Exp RP Stmt . ELSE Stmt

    ELSE  shift, and go to state 131

    $default  reduce using rule 26 (Stmt)


state 128

   28 Stmt: WHILE LP Exp RP Stmt .

    $default  reduce using rule 28 (Stmt)


state 129

   42 Exp: Exp . ASSIGNOP Exp
   43    | Exp . AND Exp
   44    | Exp . OR Exp
   45    | Exp . RELOP Exp
   46    | Exp . PLUS Exp
   47    | Exp . MINUS Exp
   48    | Exp . STAR Exp
   49    | Exp . DIV Exp
   67 ForCondition: Exp SEMI Exp . SEMI Exp

    RELOP     shift, and go to state 88
    SEMI      shift, and go to state 132
    PLUS      shift, and go to state 90
    MINUS     shift, and go to state 91
    STAR      shift, and go to state 92
    DIV       shift, and go to state 93
    ASSIGNOP  shift, and go to state 94
    AND       shift, and go to state 95
    OR        shift, and go to state 96


state 130

   29 Stmt: FOR LP ForCondition RP Stmt .

    $default  reduce using rule 29 (Stmt)


state 131

   27 Stmt: IF LP Exp RP Stmt ELSE . Stmt

    INT       shift, and go to state 50
    ID        shift, and go to state 51
    FLOAT     shift, and go to state 52
    CHAR      shift, and go to state 53
    LP        shift, and go to state 54
    LC        shift, and go to state 24
    MINUS     shift, and go to state 55
    NOT       shift, and go to state 56
    IF        shift, and go to state 57
    WHILE     shift, and go to state 58
    RETURN    shift, and go to state 59
    FOR       shift, and go to state 60
    BREAK     shift, and go to state 61
    CONTINUE  shift, and go to state 62

    CompSt  go to state 63
    Stmt    go to state 133
    Exp     go to state 66


state 132

   67 ForCondition: Exp SEMI Exp SEMI . Exp

    INT       shift, and go to state 50
    ID        shift, and go to state 51
    FLOAT     shift, and go to state 52
    CHAR      shift, and go to state 53
    LP        shift, and go to state 54
    MINUS     shift, and go to state 55
    NOT       shift, and go to state 56
    BREAK     shift, and go to state 61
    CONTINUE  shift, and go to state 62

    Exp  go to state 134


state 133

   27 Stmt: IF LP Exp RP Stmt ELSE Stmt .

    $default  reduce using rule 27 (Stmt)


state 134

   42 Exp: Exp . ASSIGNOP Exp
   43    | Exp . AND Exp
   44    | Exp . OR Exp
   45    | Exp . RELOP Exp
   46    | Exp . PLUS Exp
   47    | Exp . MINUS Exp
   48    | Exp . STAR Exp
   49    | Exp . DIV Exp
   67 ForCondition: Exp SEMI Exp SEMI Exp .

    RELOP     shift, and go to state 88
    PLUS      shift, and go to state 90
    MINUS     shift, and go to state 91
    STAR      shift, and go to state 92
    DIV       shift, and go to state 93
    ASSIGNOP  shift, and go to state 94
    AND       shift, and go to state 95
    OR        shift, and go to state 96

    $default  reduce using rule 67 (ForCondition)
