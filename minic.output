Grammar

    0 $accept: program $end

    1 program: ExtDefList

    2 ExtDefList: /* empty */
    3           | ExtDef ExtDefList

    4 ExtDef: Specifier ExtDecList SEMI
    5       | Specifier FuncDec CompSt
    6       | StructDec SEMI
    7       | error SEMI

    8 StructDec: STRUCT ID LC DefList RC

    9 Specifier: TYPE
   10          | STRUCT ID
   11          | TYPE LM RM

   12 ExtDecList: VarDec
   13           | VarDec COMMA ExtDecList

   14 VarDec: ID

   15 FuncDec: ID LP VarList RP
   16        | ID LP RP

   17 VarList: ParamDec
   18        | ParamDec COMMA VarList

   19 ParamDec: Specifier VarDec

   20 CompSt: LC DefList StmList RC

   21 StmList: /* empty */
   22        | Stmt StmList

   23 Stmt: Exp SEMI
   24     | CompSt
   25     | RETURN Exp SEMI
   26     | IF LP Exp RP Stmt
   27     | IF LP Exp RP Stmt ELSE Stmt
   28     | WHILE LP Exp RP Stmt
   29     | FOR LP ForCondition RP Stmt

   30 DefList: /* empty */
   31        | Def DefList

   32 Def: Specifier DecList SEMI

   33 DecList: Dec
   34        | Dec COMMA DecList

   35 Dec: VarDec
   36    | VarDec ASSIGNOP Exp

   37 Exp: Exp ASSIGNOP Exp
   38    | Exp AND Exp
   39    | Exp OR Exp
   40    | Exp RELOP Exp
   41    | Exp PLUS Exp
   42    | Exp MINUS Exp
   43    | Exp STAR Exp
   44    | Exp DIV Exp
   45    | LP Exp RP
   46    | MINUS Exp
   47    | NOT Exp
   48    | ID LP Args RP
   49    | ID LP RP
   50    | ID
   51    | INT
   52    | FLOAT
   53    | CHAR
   54    | ID DECREMENT
   55    | ID INCREMENT
   56    | ID DOT ID
   57    | ID LM Exp RM
   58    | BREAK
   59    | CONTINUE

   60 Args: Exp COMMA Args
   61     | Exp

   62 ForCondition: Exp SEMI Exp SEMI Exp


Terminals, with rules where they appear

$end (0) 0
error (256) 7
INT (258) 51
ID (259) 8 10 14 15 16 48 49 50 54 55 56 57
RELOP (260) 40
TYPE (261) 9 11
FLOAT (262) 52
CHAR (263) 53
LP (264) 15 16 26 27 28 29 45 48 49
RP (265) 15 16 26 27 28 29 45 48 49
LC (266) 8 20
RC (267) 8 20
SEMI (268) 4 6 7 23 25 32 62
COMMA (269) 13 18 34 60
LM (270) 11 57
RM (271) 11 57
PLUS (272) 41
MINUS (273) 42 46
STAR (274) 43
DIV (275) 44
ASSIGNOP (276) 36 37
AND (277) 38
OR (278) 39
NOT (279) 47
IF (280) 26 27
ELSE (281) 27
WHILE (282) 28
RETURN (283) 25
INCREMENT (284) 55
DECREMENT (285) 54
STRUCT (286) 8 10
FOR (287) 29
DOT (288) 56
BREAK (289) 58
CONTINUE (290) 59
UMINUS (291)
LOWER_THEN_ELSE (292)


Nonterminals, with rules where they appear

$accept (38)
    on left: 0
program (39)
    on left: 1, on right: 0
ExtDefList (40)
    on left: 2 3, on right: 1 3
ExtDef (41)
    on left: 4 5 6 7, on right: 3
StructDec (42)
    on left: 8, on right: 6
Specifier (43)
    on left: 9 10 11, on right: 4 5 19 32
ExtDecList (44)
    on left: 12 13, on right: 4 13
VarDec (45)
    on left: 14, on right: 12 13 19 35 36
FuncDec (46)
    on left: 15 16, on right: 5
VarList (47)
    on left: 17 18, on right: 15 18
ParamDec (48)
    on left: 19, on right: 17 18
CompSt (49)
    on left: 20, on right: 5 24
StmList (50)
    on left: 21 22, on right: 20 22
Stmt (51)
    on left: 23 24 25 26 27 28 29, on right: 22 26 27 28 29
DefList (52)
    on left: 30 31, on right: 8 20 31
Def (53)
    on left: 32, on right: 31
DecList (54)
    on left: 33 34, on right: 32 34
Dec (55)
    on left: 35 36, on right: 33 34
Exp (56)
    on left: 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54
    55 56 57 58 59, on right: 23 25 26 27 28 36 37 38 39 40 41 42 43
    44 45 46 47 57 60 61 62
Args (57)
    on left: 60 61, on right: 48 60
ForCondition (58)
    on left: 62, on right: 29


state 0

    0 $accept: . program $end

    error   shift, and go to state 1
    TYPE    shift, and go to state 2
    STRUCT  shift, and go to state 3

    $end  reduce using rule 2 (ExtDefList)

    program     go to state 4
    ExtDefList  go to state 5
    ExtDef      go to state 6
    StructDec   go to state 7
    Specifier   go to state 8


state 1

    7 ExtDef: error . SEMI

    SEMI  shift, and go to state 9


state 2

    9 Specifier: TYPE .
   11          | TYPE . LM RM

    LM  shift, and go to state 10

    $default  reduce using rule 9 (Specifier)


state 3

    8 StructDec: STRUCT . ID LC DefList RC
   10 Specifier: STRUCT . ID

    ID  shift, and go to state 11


state 4

    0 $accept: program . $end

    $end  shift, and go to state 12


state 5

    1 program: ExtDefList .

    $default  reduce using rule 1 (program)


state 6

    3 ExtDefList: ExtDef . ExtDefList

    error   shift, and go to state 1
    TYPE    shift, and go to state 2
    STRUCT  shift, and go to state 3

    $end  reduce using rule 2 (ExtDefList)

    ExtDefList  go to state 13
    ExtDef      go to state 6
    StructDec   go to state 7
    Specifier   go to state 8


state 7

    6 ExtDef: StructDec . SEMI

    SEMI  shift, and go to state 14


state 8

    4 ExtDef: Specifier . ExtDecList SEMI
    5       | Specifier . FuncDec CompSt

    ID  shift, and go to state 15

    ExtDecList  go to state 16
    VarDec      go to state 17
    FuncDec     go to state 18


state 9

    7 ExtDef: error SEMI .

    $default  reduce using rule 7 (ExtDef)


state 10

   11 Specifier: TYPE LM . RM

    RM  shift, and go to state 19


state 11

    8 StructDec: STRUCT ID . LC DefList RC
   10 Specifier: STRUCT ID .

    LC  shift, and go to state 20

    $default  reduce using rule 10 (Specifier)


state 12

    0 $accept: program $end .

    $default  accept


state 13

    3 ExtDefList: ExtDef ExtDefList .

    $default  reduce using rule 3 (ExtDefList)


state 14

    6 ExtDef: StructDec SEMI .

    $default  reduce using rule 6 (ExtDef)


state 15

   14 VarDec: ID .
   15 FuncDec: ID . LP VarList RP
   16        | ID . LP RP

    LP  shift, and go to state 21

    $default  reduce using rule 14 (VarDec)


state 16

    4 ExtDef: Specifier ExtDecList . SEMI

    SEMI  shift, and go to state 22


state 17

   12 ExtDecList: VarDec .
   13           | VarDec . COMMA ExtDecList

    COMMA  shift, and go to state 23

    $default  reduce using rule 12 (ExtDecList)


state 18

    5 ExtDef: Specifier FuncDec . CompSt

    LC  shift, and go to state 24

    CompSt  go to state 25


state 19

   11 Specifier: TYPE LM RM .

    $default  reduce using rule 11 (Specifier)


state 20

    8 StructDec: STRUCT ID LC . DefList RC

    TYPE    shift, and go to state 2
    STRUCT  shift, and go to state 26

    $default  reduce using rule 30 (DefList)

    Specifier  go to state 27
    DefList    go to state 28
    Def        go to state 29


state 21

   15 FuncDec: ID LP . VarList RP
   16        | ID LP . RP

    TYPE    shift, and go to state 2
    RP      shift, and go to state 30
    STRUCT  shift, and go to state 26

    Specifier  go to state 31
    VarList    go to state 32
    ParamDec   go to state 33


state 22

    4 ExtDef: Specifier ExtDecList SEMI .

    $default  reduce using rule 4 (ExtDef)


state 23

   13 ExtDecList: VarDec COMMA . ExtDecList

    ID  shift, and go to state 34

    ExtDecList  go to state 35
    VarDec      go to state 17


state 24

   20 CompSt: LC . DefList StmList RC

    TYPE    shift, and go to state 2
    STRUCT  shift, and go to state 26

    $default  reduce using rule 30 (DefList)

    Specifier  go to state 27
    DefList    go to state 36
    Def        go to state 29


state 25

    5 ExtDef: Specifier FuncDec CompSt .

    $default  reduce using rule 5 (ExtDef)


state 26

   10 Specifier: STRUCT . ID

    ID  shift, and go to state 37


state 27

   32 Def: Specifier . DecList SEMI

    ID  shift, and go to state 34

    VarDec   go to state 38
    DecList  go to state 39
    Dec      go to state 40


state 28

    8 StructDec: STRUCT ID LC DefList . RC

    RC  shift, and go to state 41


state 29

   31 DefList: Def . DefList

    TYPE    shift, and go to state 2
    STRUCT  shift, and go to state 26

    $default  reduce using rule 30 (DefList)

    Specifier  go to state 27
    DefList    go to state 42
    Def        go to state 29


state 30

   16 FuncDec: ID LP RP .

    $default  reduce using rule 16 (FuncDec)


state 31

   19 ParamDec: Specifier . VarDec

    ID  shift, and go to state 34

    VarDec  go to state 43


state 32

   15 FuncDec: ID LP VarList . RP

    RP  shift, and go to state 44


state 33

   17 VarList: ParamDec .
   18        | ParamDec . COMMA VarList

    COMMA  shift, and go to state 45

    $default  reduce using rule 17 (VarList)


state 34

   14 VarDec: ID .

    $default  reduce using rule 14 (VarDec)


state 35

   13 ExtDecList: VarDec COMMA ExtDecList .

    $default  reduce using rule 13 (ExtDecList)


state 36

   20 CompSt: LC DefList . StmList RC

    INT       shift, and go to state 46
    ID        shift, and go to state 47
    FLOAT     shift, and go to state 48
    CHAR      shift, and go to state 49
    LP        shift, and go to state 50
    LC        shift, and go to state 24
    MINUS     shift, and go to state 51
    NOT       shift, and go to state 52
    IF        shift, and go to state 53
    WHILE     shift, and go to state 54
    RETURN    shift, and go to state 55
    FOR       shift, and go to state 56
    BREAK     shift, and go to state 57
    CONTINUE  shift, and go to state 58

    $default  reduce using rule 21 (StmList)

    CompSt   go to state 59
    StmList  go to state 60
    Stmt     go to state 61
    Exp      go to state 62


state 37

   10 Specifier: STRUCT ID .

    $default  reduce using rule 10 (Specifier)


state 38

   35 Dec: VarDec .
   36    | VarDec . ASSIGNOP Exp

    ASSIGNOP  shift, and go to state 63

    $default  reduce using rule 35 (Dec)


state 39

   32 Def: Specifier DecList . SEMI

    SEMI  shift, and go to state 64


state 40

   33 DecList: Dec .
   34        | Dec . COMMA DecList

    COMMA  shift, and go to state 65

    $default  reduce using rule 33 (DecList)


state 41

    8 StructDec: STRUCT ID LC DefList RC .

    $default  reduce using rule 8 (StructDec)


state 42

   31 DefList: Def DefList .

    $default  reduce using rule 31 (DefList)


state 43

   19 ParamDec: Specifier VarDec .

    $default  reduce using rule 19 (ParamDec)


state 44

   15 FuncDec: ID LP VarList RP .

    $default  reduce using rule 15 (FuncDec)


state 45

   18 VarList: ParamDec COMMA . VarList

    TYPE    shift, and go to state 2
    STRUCT  shift, and go to state 26

    Specifier  go to state 31
    VarList    go to state 66
    ParamDec   go to state 33


state 46

   51 Exp: INT .

    $default  reduce using rule 51 (Exp)


state 47

   48 Exp: ID . LP Args RP
   49    | ID . LP RP
   50    | ID .
   54    | ID . DECREMENT
   55    | ID . INCREMENT
   56    | ID . DOT ID
   57    | ID . LM Exp RM

    LP         shift, and go to state 67
    LM         shift, and go to state 68
    INCREMENT  shift, and go to state 69
    DECREMENT  shift, and go to state 70
    DOT        shift, and go to state 71

    $default  reduce using rule 50 (Exp)


state 48

   52 Exp: FLOAT .

    $default  reduce using rule 52 (Exp)


state 49

   53 Exp: CHAR .

    $default  reduce using rule 53 (Exp)


state 50

   45 Exp: LP . Exp RP

    INT       shift, and go to state 46
    ID        shift, and go to state 47
    FLOAT     shift, and go to state 48
    CHAR      shift, and go to state 49
    LP        shift, and go to state 50
    MINUS     shift, and go to state 51
    NOT       shift, and go to state 52
    BREAK     shift, and go to state 57
    CONTINUE  shift, and go to state 58

    Exp  go to state 72


state 51

   46 Exp: MINUS . Exp

    INT       shift, and go to state 46
    ID        shift, and go to state 47
    FLOAT     shift, and go to state 48
    CHAR      shift, and go to state 49
    LP        shift, and go to state 50
    MINUS     shift, and go to state 51
    NOT       shift, and go to state 52
    BREAK     shift, and go to state 57
    CONTINUE  shift, and go to state 58

    Exp  go to state 73


state 52

   47 Exp: NOT . Exp

    INT       shift, and go to state 46
    ID        shift, and go to state 47
    FLOAT     shift, and go to state 48
    CHAR      shift, and go to state 49
    LP        shift, and go to state 50
    MINUS     shift, and go to state 51
    NOT       shift, and go to state 52
    BREAK     shift, and go to state 57
    CONTINUE  shift, and go to state 58

    Exp  go to state 74


state 53

   26 Stmt: IF . LP Exp RP Stmt
   27     | IF . LP Exp RP Stmt ELSE Stmt

    LP  shift, and go to state 75


state 54

   28 Stmt: WHILE . LP Exp RP Stmt

    LP  shift, and go to state 76


state 55

   25 Stmt: RETURN . Exp SEMI

    INT       shift, and go to state 46
    ID        shift, and go to state 47
    FLOAT     shift, and go to state 48
    CHAR      shift, and go to state 49
    LP        shift, and go to state 50
    MINUS     shift, and go to state 51
    NOT       shift, and go to state 52
    BREAK     shift, and go to state 57
    CONTINUE  shift, and go to state 58

    Exp  go to state 77


state 56

   29 Stmt: FOR . LP ForCondition RP Stmt

    LP  shift, and go to state 78


state 57

   58 Exp: BREAK .

    $default  reduce using rule 58 (Exp)


state 58

   59 Exp: CONTINUE .

    $default  reduce using rule 59 (Exp)


state 59

   24 Stmt: CompSt .

    $default  reduce using rule 24 (Stmt)


state 60

   20 CompSt: LC DefList StmList . RC

    RC  shift, and go to state 79


state 61

   22 StmList: Stmt . StmList

    INT       shift, and go to state 46
    ID        shift, and go to state 47
    FLOAT     shift, and go to state 48
    CHAR      shift, and go to state 49
    LP        shift, and go to state 50
    LC        shift, and go to state 24
    MINUS     shift, and go to state 51
    NOT       shift, and go to state 52
    IF        shift, and go to state 53
    WHILE     shift, and go to state 54
    RETURN    shift, and go to state 55
    FOR       shift, and go to state 56
    BREAK     shift, and go to state 57
    CONTINUE  shift, and go to state 58

    $default  reduce using rule 21 (StmList)

    CompSt   go to state 59
    StmList  go to state 80
    Stmt     go to state 61
    Exp      go to state 62


state 62

   23 Stmt: Exp . SEMI
   37 Exp: Exp . ASSIGNOP Exp
   38    | Exp . AND Exp
   39    | Exp . OR Exp
   40    | Exp . RELOP Exp
   41    | Exp . PLUS Exp
   42    | Exp . MINUS Exp
   43    | Exp . STAR Exp
   44    | Exp . DIV Exp

    RELOP     shift, and go to state 81
    SEMI      shift, and go to state 82
    PLUS      shift, and go to state 83
    MINUS     shift, and go to state 84
    STAR      shift, and go to state 85
    DIV       shift, and go to state 86
    ASSIGNOP  shift, and go to state 87
    AND       shift, and go to state 88
    OR        shift, and go to state 89


state 63

   36 Dec: VarDec ASSIGNOP . Exp

    INT       shift, and go to state 46
    ID        shift, and go to state 47
    FLOAT     shift, and go to state 48
    CHAR      shift, and go to state 49
    LP        shift, and go to state 50
    MINUS     shift, and go to state 51
    NOT       shift, and go to state 52
    BREAK     shift, and go to state 57
    CONTINUE  shift, and go to state 58

    Exp  go to state 90


state 64

   32 Def: Specifier DecList SEMI .

    $default  reduce using rule 32 (Def)


state 65

   34 DecList: Dec COMMA . DecList

    ID  shift, and go to state 34

    VarDec   go to state 38
    DecList  go to state 91
    Dec      go to state 40


state 66

   18 VarList: ParamDec COMMA VarList .

    $default  reduce using rule 18 (VarList)


state 67

   48 Exp: ID LP . Args RP
   49    | ID LP . RP

    INT       shift, and go to state 46
    ID        shift, and go to state 47
    FLOAT     shift, and go to state 48
    CHAR      shift, and go to state 49
    LP        shift, and go to state 50
    RP        shift, and go to state 92
    MINUS     shift, and go to state 51
    NOT       shift, and go to state 52
    BREAK     shift, and go to state 57
    CONTINUE  shift, and go to state 58

    Exp   go to state 93
    Args  go to state 94


state 68

   57 Exp: ID LM . Exp RM

    INT       shift, and go to state 46
    ID        shift, and go to state 47
    FLOAT     shift, and go to state 48
    CHAR      shift, and go to state 49
    LP        shift, and go to state 50
    MINUS     shift, and go to state 51
    NOT       shift, and go to state 52
    BREAK     shift, and go to state 57
    CONTINUE  shift, and go to state 58

    Exp  go to state 95


state 69

   55 Exp: ID INCREMENT .

    $default  reduce using rule 55 (Exp)


state 70

   54 Exp: ID DECREMENT .

    $default  reduce using rule 54 (Exp)


state 71

   56 Exp: ID DOT . ID

    ID  shift, and go to state 96


state 72

   37 Exp: Exp . ASSIGNOP Exp
   38    | Exp . AND Exp
   39    | Exp . OR Exp
   40    | Exp . RELOP Exp
   41    | Exp . PLUS Exp
   42    | Exp . MINUS Exp
   43    | Exp . STAR Exp
   44    | Exp . DIV Exp
   45    | LP Exp . RP

    RELOP     shift, and go to state 81
    RP        shift, and go to state 97
    PLUS      shift, and go to state 83
    MINUS     shift, and go to state 84
    STAR      shift, and go to state 85
    DIV       shift, and go to state 86
    ASSIGNOP  shift, and go to state 87
    AND       shift, and go to state 88
    OR        shift, and go to state 89


state 73

   37 Exp: Exp . ASSIGNOP Exp
   38    | Exp . AND Exp
   39    | Exp . OR Exp
   40    | Exp . RELOP Exp
   41    | Exp . PLUS Exp
   42    | Exp . MINUS Exp
   43    | Exp . STAR Exp
   44    | Exp . DIV Exp
   46    | MINUS Exp .

    $default  reduce using rule 46 (Exp)


state 74

   37 Exp: Exp . ASSIGNOP Exp
   38    | Exp . AND Exp
   39    | Exp . OR Exp
   40    | Exp . RELOP Exp
   41    | Exp . PLUS Exp
   42    | Exp . MINUS Exp
   43    | Exp . STAR Exp
   44    | Exp . DIV Exp
   47    | NOT Exp .

    $default  reduce using rule 47 (Exp)


state 75

   26 Stmt: IF LP . Exp RP Stmt
   27     | IF LP . Exp RP Stmt ELSE Stmt

    INT       shift, and go to state 46
    ID        shift, and go to state 47
    FLOAT     shift, and go to state 48
    CHAR      shift, and go to state 49
    LP        shift, and go to state 50
    MINUS     shift, and go to state 51
    NOT       shift, and go to state 52
    BREAK     shift, and go to state 57
    CONTINUE  shift, and go to state 58

    Exp  go to state 98


state 76

   28 Stmt: WHILE LP . Exp RP Stmt

    INT       shift, and go to state 46
    ID        shift, and go to state 47
    FLOAT     shift, and go to state 48
    CHAR      shift, and go to state 49
    LP        shift, and go to state 50
    MINUS     shift, and go to state 51
    NOT       shift, and go to state 52
    BREAK     shift, and go to state 57
    CONTINUE  shift, and go to state 58

    Exp  go to state 99


state 77

   25 Stmt: RETURN Exp . SEMI
   37 Exp: Exp . ASSIGNOP Exp
   38    | Exp . AND Exp
   39    | Exp . OR Exp
   40    | Exp . RELOP Exp
   41    | Exp . PLUS Exp
   42    | Exp . MINUS Exp
   43    | Exp . STAR Exp
   44    | Exp . DIV Exp

    RELOP     shift, and go to state 81
    SEMI      shift, and go to state 100
    PLUS      shift, and go to state 83
    MINUS     shift, and go to state 84
    STAR      shift, and go to state 85
    DIV       shift, and go to state 86
    ASSIGNOP  shift, and go to state 87
    AND       shift, and go to state 88
    OR        shift, and go to state 89


state 78

   29 Stmt: FOR LP . ForCondition RP Stmt

    INT       shift, and go to state 46
    ID        shift, and go to state 47
    FLOAT     shift, and go to state 48
    CHAR      shift, and go to state 49
    LP        shift, and go to state 50
    MINUS     shift, and go to state 51
    NOT       shift, and go to state 52
    BREAK     shift, and go to state 57
    CONTINUE  shift, and go to state 58

    Exp           go to state 101
    ForCondition  go to state 102


state 79

   20 CompSt: LC DefList StmList RC .

    $default  reduce using rule 20 (CompSt)


state 80

   22 StmList: Stmt StmList .

    $default  reduce using rule 22 (StmList)


state 81

   40 Exp: Exp RELOP . Exp

    INT       shift, and go to state 46
    ID        shift, and go to state 47
    FLOAT     shift, and go to state 48
    CHAR      shift, and go to state 49
    LP        shift, and go to state 50
    MINUS     shift, and go to state 51
    NOT       shift, and go to state 52
    BREAK     shift, and go to state 57
    CONTINUE  shift, and go to state 58

    Exp  go to state 103


state 82

   23 Stmt: Exp SEMI .

    $default  reduce using rule 23 (Stmt)


state 83

   41 Exp: Exp PLUS . Exp

    INT       shift, and go to state 46
    ID        shift, and go to state 47
    FLOAT     shift, and go to state 48
    CHAR      shift, and go to state 49
    LP        shift, and go to state 50
    MINUS     shift, and go to state 51
    NOT       shift, and go to state 52
    BREAK     shift, and go to state 57
    CONTINUE  shift, and go to state 58

    Exp  go to state 104


state 84

   42 Exp: Exp MINUS . Exp

    INT       shift, and go to state 46
    ID        shift, and go to state 47
    FLOAT     shift, and go to state 48
    CHAR      shift, and go to state 49
    LP        shift, and go to state 50
    MINUS     shift, and go to state 51
    NOT       shift, and go to state 52
    BREAK     shift, and go to state 57
    CONTINUE  shift, and go to state 58

    Exp  go to state 105


state 85

   43 Exp: Exp STAR . Exp

    INT       shift, and go to state 46
    ID        shift, and go to state 47
    FLOAT     shift, and go to state 48
    CHAR      shift, and go to state 49
    LP        shift, and go to state 50
    MINUS     shift, and go to state 51
    NOT       shift, and go to state 52
    BREAK     shift, and go to state 57
    CONTINUE  shift, and go to state 58

    Exp  go to state 106


state 86

   44 Exp: Exp DIV . Exp

    INT       shift, and go to state 46
    ID        shift, and go to state 47
    FLOAT     shift, and go to state 48
    CHAR      shift, and go to state 49
    LP        shift, and go to state 50
    MINUS     shift, and go to state 51
    NOT       shift, and go to state 52
    BREAK     shift, and go to state 57
    CONTINUE  shift, and go to state 58

    Exp  go to state 107


state 87

   37 Exp: Exp ASSIGNOP . Exp

    INT       shift, and go to state 46
    ID        shift, and go to state 47
    FLOAT     shift, and go to state 48
    CHAR      shift, and go to state 49
    LP        shift, and go to state 50
    MINUS     shift, and go to state 51
    NOT       shift, and go to state 52
    BREAK     shift, and go to state 57
    CONTINUE  shift, and go to state 58

    Exp  go to state 108


state 88

   38 Exp: Exp AND . Exp

    INT       shift, and go to state 46
    ID        shift, and go to state 47
    FLOAT     shift, and go to state 48
    CHAR      shift, and go to state 49
    LP        shift, and go to state 50
    MINUS     shift, and go to state 51
    NOT       shift, and go to state 52
    BREAK     shift, and go to state 57
    CONTINUE  shift, and go to state 58

    Exp  go to state 109


state 89

   39 Exp: Exp OR . Exp

    INT       shift, and go to state 46
    ID        shift, and go to state 47
    FLOAT     shift, and go to state 48
    CHAR      shift, and go to state 49
    LP        shift, and go to state 50
    MINUS     shift, and go to state 51
    NOT       shift, and go to state 52
    BREAK     shift, and go to state 57
    CONTINUE  shift, and go to state 58

    Exp  go to state 110


state 90

   36 Dec: VarDec ASSIGNOP Exp .
   37 Exp: Exp . ASSIGNOP Exp
   38    | Exp . AND Exp
   39    | Exp . OR Exp
   40    | Exp . RELOP Exp
   41    | Exp . PLUS Exp
   42    | Exp . MINUS Exp
   43    | Exp . STAR Exp
   44    | Exp . DIV Exp

    RELOP     shift, and go to state 81
    PLUS      shift, and go to state 83
    MINUS     shift, and go to state 84
    STAR      shift, and go to state 85
    DIV       shift, and go to state 86
    ASSIGNOP  shift, and go to state 87
    AND       shift, and go to state 88
    OR        shift, and go to state 89

    $default  reduce using rule 36 (Dec)


state 91

   34 DecList: Dec COMMA DecList .

    $default  reduce using rule 34 (DecList)


state 92

   49 Exp: ID LP RP .

    $default  reduce using rule 49 (Exp)


state 93

   37 Exp: Exp . ASSIGNOP Exp
   38    | Exp . AND Exp
   39    | Exp . OR Exp
   40    | Exp . RELOP Exp
   41    | Exp . PLUS Exp
   42    | Exp . MINUS Exp
   43    | Exp . STAR Exp
   44    | Exp . DIV Exp
   60 Args: Exp . COMMA Args
   61     | Exp .

    RELOP     shift, and go to state 81
    COMMA     shift, and go to state 111
    PLUS      shift, and go to state 83
    MINUS     shift, and go to state 84
    STAR      shift, and go to state 85
    DIV       shift, and go to state 86
    ASSIGNOP  shift, and go to state 87
    AND       shift, and go to state 88
    OR        shift, and go to state 89

    $default  reduce using rule 61 (Args)


state 94

   48 Exp: ID LP Args . RP

    RP  shift, and go to state 112


state 95

   37 Exp: Exp . ASSIGNOP Exp
   38    | Exp . AND Exp
   39    | Exp . OR Exp
   40    | Exp . RELOP Exp
   41    | Exp . PLUS Exp
   42    | Exp . MINUS Exp
   43    | Exp . STAR Exp
   44    | Exp . DIV Exp
   57    | ID LM Exp . RM

    RELOP     shift, and go to state 81
    RM        shift, and go to state 113
    PLUS      shift, and go to state 83
    MINUS     shift, and go to state 84
    STAR      shift, and go to state 85
    DIV       shift, and go to state 86
    ASSIGNOP  shift, and go to state 87
    AND       shift, and go to state 88
    OR        shift, and go to state 89


state 96

   56 Exp: ID DOT ID .

    $default  reduce using rule 56 (Exp)


state 97

   45 Exp: LP Exp RP .

    $default  reduce using rule 45 (Exp)


state 98

   26 Stmt: IF LP Exp . RP Stmt
   27     | IF LP Exp . RP Stmt ELSE Stmt
   37 Exp: Exp . ASSIGNOP Exp
   38    | Exp . AND Exp
   39    | Exp . OR Exp
   40    | Exp . RELOP Exp
   41    | Exp . PLUS Exp
   42    | Exp . MINUS Exp
   43    | Exp . STAR Exp
   44    | Exp . DIV Exp

    RELOP     shift, and go to state 81
    RP        shift, and go to state 114
    PLUS      shift, and go to state 83
    MINUS     shift, and go to state 84
    STAR      shift, and go to state 85
    DIV       shift, and go to state 86
    ASSIGNOP  shift, and go to state 87
    AND       shift, and go to state 88
    OR        shift, and go to state 89


state 99

   28 Stmt: WHILE LP Exp . RP Stmt
   37 Exp: Exp . ASSIGNOP Exp
   38    | Exp . AND Exp
   39    | Exp . OR Exp
   40    | Exp . RELOP Exp
   41    | Exp . PLUS Exp
   42    | Exp . MINUS Exp
   43    | Exp . STAR Exp
   44    | Exp . DIV Exp

    RELOP     shift, and go to state 81
    RP        shift, and go to state 115
    PLUS      shift, and go to state 83
    MINUS     shift, and go to state 84
    STAR      shift, and go to state 85
    DIV       shift, and go to state 86
    ASSIGNOP  shift, and go to state 87
    AND       shift, and go to state 88
    OR        shift, and go to state 89


state 100

   25 Stmt: RETURN Exp SEMI .

    $default  reduce using rule 25 (Stmt)


state 101

   37 Exp: Exp . ASSIGNOP Exp
   38    | Exp . AND Exp
   39    | Exp . OR Exp
   40    | Exp . RELOP Exp
   41    | Exp . PLUS Exp
   42    | Exp . MINUS Exp
   43    | Exp . STAR Exp
   44    | Exp . DIV Exp
   62 ForCondition: Exp . SEMI Exp SEMI Exp

    RELOP     shift, and go to state 81
    SEMI      shift, and go to state 116
    PLUS      shift, and go to state 83
    MINUS     shift, and go to state 84
    STAR      shift, and go to state 85
    DIV       shift, and go to state 86
    ASSIGNOP  shift, and go to state 87
    AND       shift, and go to state 88
    OR        shift, and go to state 89


state 102

   29 Stmt: FOR LP ForCondition . RP Stmt

    RP  shift, and go to state 117


state 103

   37 Exp: Exp . ASSIGNOP Exp
   38    | Exp . AND Exp
   39    | Exp . OR Exp
   40    | Exp . RELOP Exp
   40    | Exp RELOP Exp .
   41    | Exp . PLUS Exp
   42    | Exp . MINUS Exp
   43    | Exp . STAR Exp
   44    | Exp . DIV Exp

    PLUS   shift, and go to state 83
    MINUS  shift, and go to state 84
    STAR   shift, and go to state 85
    DIV    shift, and go to state 86

    $default  reduce using rule 40 (Exp)


state 104

   37 Exp: Exp . ASSIGNOP Exp
   38    | Exp . AND Exp
   39    | Exp . OR Exp
   40    | Exp . RELOP Exp
   41    | Exp . PLUS Exp
   41    | Exp PLUS Exp .
   42    | Exp . MINUS Exp
   43    | Exp . STAR Exp
   44    | Exp . DIV Exp

    STAR  shift, and go to state 85
    DIV   shift, and go to state 86

    $default  reduce using rule 41 (Exp)


state 105

   37 Exp: Exp . ASSIGNOP Exp
   38    | Exp . AND Exp
   39    | Exp . OR Exp
   40    | Exp . RELOP Exp
   41    | Exp . PLUS Exp
   42    | Exp . MINUS Exp
   42    | Exp MINUS Exp .
   43    | Exp . STAR Exp
   44    | Exp . DIV Exp

    STAR  shift, and go to state 85
    DIV   shift, and go to state 86

    $default  reduce using rule 42 (Exp)


state 106

   37 Exp: Exp . ASSIGNOP Exp
   38    | Exp . AND Exp
   39    | Exp . OR Exp
   40    | Exp . RELOP Exp
   41    | Exp . PLUS Exp
   42    | Exp . MINUS Exp
   43    | Exp . STAR Exp
   43    | Exp STAR Exp .
   44    | Exp . DIV Exp

    $default  reduce using rule 43 (Exp)


state 107

   37 Exp: Exp . ASSIGNOP Exp
   38    | Exp . AND Exp
   39    | Exp . OR Exp
   40    | Exp . RELOP Exp
   41    | Exp . PLUS Exp
   42    | Exp . MINUS Exp
   43    | Exp . STAR Exp
   44    | Exp . DIV Exp
   44    | Exp DIV Exp .

    $default  reduce using rule 44 (Exp)


state 108

   37 Exp: Exp . ASSIGNOP Exp
   37    | Exp ASSIGNOP Exp .
   38    | Exp . AND Exp
   39    | Exp . OR Exp
   40    | Exp . RELOP Exp
   41    | Exp . PLUS Exp
   42    | Exp . MINUS Exp
   43    | Exp . STAR Exp
   44    | Exp . DIV Exp

    RELOP  shift, and go to state 81
    PLUS   shift, and go to state 83
    MINUS  shift, and go to state 84
    STAR   shift, and go to state 85
    DIV    shift, and go to state 86
    AND    shift, and go to state 88
    OR     shift, and go to state 89

    $default  reduce using rule 37 (Exp)


state 109

   37 Exp: Exp . ASSIGNOP Exp
   38    | Exp . AND Exp
   38    | Exp AND Exp .
   39    | Exp . OR Exp
   40    | Exp . RELOP Exp
   41    | Exp . PLUS Exp
   42    | Exp . MINUS Exp
   43    | Exp . STAR Exp
   44    | Exp . DIV Exp

    RELOP  shift, and go to state 81
    PLUS   shift, and go to state 83
    MINUS  shift, and go to state 84
    STAR   shift, and go to state 85
    DIV    shift, and go to state 86

    $default  reduce using rule 38 (Exp)


state 110

   37 Exp: Exp . ASSIGNOP Exp
   38    | Exp . AND Exp
   39    | Exp . OR Exp
   39    | Exp OR Exp .
   40    | Exp . RELOP Exp
   41    | Exp . PLUS Exp
   42    | Exp . MINUS Exp
   43    | Exp . STAR Exp
   44    | Exp . DIV Exp

    RELOP  shift, and go to state 81
    PLUS   shift, and go to state 83
    MINUS  shift, and go to state 84
    STAR   shift, and go to state 85
    DIV    shift, and go to state 86
    AND    shift, and go to state 88

    $default  reduce using rule 39 (Exp)


state 111

   60 Args: Exp COMMA . Args

    INT       shift, and go to state 46
    ID        shift, and go to state 47
    FLOAT     shift, and go to state 48
    CHAR      shift, and go to state 49
    LP        shift, and go to state 50
    MINUS     shift, and go to state 51
    NOT       shift, and go to state 52
    BREAK     shift, and go to state 57
    CONTINUE  shift, and go to state 58

    Exp   go to state 93
    Args  go to state 118


state 112

   48 Exp: ID LP Args RP .

    $default  reduce using rule 48 (Exp)


state 113

   57 Exp: ID LM Exp RM .

    $default  reduce using rule 57 (Exp)


state 114

   26 Stmt: IF LP Exp RP . Stmt
   27     | IF LP Exp RP . Stmt ELSE Stmt

    INT       shift, and go to state 46
    ID        shift, and go to state 47
    FLOAT     shift, and go to state 48
    CHAR      shift, and go to state 49
    LP        shift, and go to state 50
    LC        shift, and go to state 24
    MINUS     shift, and go to state 51
    NOT       shift, and go to state 52
    IF        shift, and go to state 53
    WHILE     shift, and go to state 54
    RETURN    shift, and go to state 55
    FOR       shift, and go to state 56
    BREAK     shift, and go to state 57
    CONTINUE  shift, and go to state 58

    CompSt  go to state 59
    Stmt    go to state 119
    Exp     go to state 62


state 115

   28 Stmt: WHILE LP Exp RP . Stmt

    INT       shift, and go to state 46
    ID        shift, and go to state 47
    FLOAT     shift, and go to state 48
    CHAR      shift, and go to state 49
    LP        shift, and go to state 50
    LC        shift, and go to state 24
    MINUS     shift, and go to state 51
    NOT       shift, and go to state 52
    IF        shift, and go to state 53
    WHILE     shift, and go to state 54
    RETURN    shift, and go to state 55
    FOR       shift, and go to state 56
    BREAK     shift, and go to state 57
    CONTINUE  shift, and go to state 58

    CompSt  go to state 59
    Stmt    go to state 120
    Exp     go to state 62


state 116

   62 ForCondition: Exp SEMI . Exp SEMI Exp

    INT       shift, and go to state 46
    ID        shift, and go to state 47
    FLOAT     shift, and go to state 48
    CHAR      shift, and go to state 49
    LP        shift, and go to state 50
    MINUS     shift, and go to state 51
    NOT       shift, and go to state 52
    BREAK     shift, and go to state 57
    CONTINUE  shift, and go to state 58

    Exp  go to state 121


state 117

   29 Stmt: FOR LP ForCondition RP . Stmt

    INT       shift, and go to state 46
    ID        shift, and go to state 47
    FLOAT     shift, and go to state 48
    CHAR      shift, and go to state 49
    LP        shift, and go to state 50
    LC        shift, and go to state 24
    MINUS     shift, and go to state 51
    NOT       shift, and go to state 52
    IF        shift, and go to state 53
    WHILE     shift, and go to state 54
    RETURN    shift, and go to state 55
    FOR       shift, and go to state 56
    BREAK     shift, and go to state 57
    CONTINUE  shift, and go to state 58

    CompSt  go to state 59
    Stmt    go to state 122
    Exp     go to state 62


state 118

   60 Args: Exp COMMA Args .

    $default  reduce using rule 60 (Args)


state 119

   26 Stmt: IF LP Exp RP Stmt .
   27     | IF LP Exp RP Stmt . ELSE Stmt

    ELSE  shift, and go to state 123

    $default  reduce using rule 26 (Stmt)


state 120

   28 Stmt: WHILE LP Exp RP Stmt .

    $default  reduce using rule 28 (Stmt)


state 121

   37 Exp: Exp . ASSIGNOP Exp
   38    | Exp . AND Exp
   39    | Exp . OR Exp
   40    | Exp . RELOP Exp
   41    | Exp . PLUS Exp
   42    | Exp . MINUS Exp
   43    | Exp . STAR Exp
   44    | Exp . DIV Exp
   62 ForCondition: Exp SEMI Exp . SEMI Exp

    RELOP     shift, and go to state 81
    SEMI      shift, and go to state 124
    PLUS      shift, and go to state 83
    MINUS     shift, and go to state 84
    STAR      shift, and go to state 85
    DIV       shift, and go to state 86
    ASSIGNOP  shift, and go to state 87
    AND       shift, and go to state 88
    OR        shift, and go to state 89


state 122

   29 Stmt: FOR LP ForCondition RP Stmt .

    $default  reduce using rule 29 (Stmt)


state 123

   27 Stmt: IF LP Exp RP Stmt ELSE . Stmt

    INT       shift, and go to state 46
    ID        shift, and go to state 47
    FLOAT     shift, and go to state 48
    CHAR      shift, and go to state 49
    LP        shift, and go to state 50
    LC        shift, and go to state 24
    MINUS     shift, and go to state 51
    NOT       shift, and go to state 52
    IF        shift, and go to state 53
    WHILE     shift, and go to state 54
    RETURN    shift, and go to state 55
    FOR       shift, and go to state 56
    BREAK     shift, and go to state 57
    CONTINUE  shift, and go to state 58

    CompSt  go to state 59
    Stmt    go to state 125
    Exp     go to state 62


state 124

   62 ForCondition: Exp SEMI Exp SEMI . Exp

    INT       shift, and go to state 46
    ID        shift, and go to state 47
    FLOAT     shift, and go to state 48
    CHAR      shift, and go to state 49
    LP        shift, and go to state 50
    MINUS     shift, and go to state 51
    NOT       shift, and go to state 52
    BREAK     shift, and go to state 57
    CONTINUE  shift, and go to state 58

    Exp  go to state 126


state 125

   27 Stmt: IF LP Exp RP Stmt ELSE Stmt .

    $default  reduce using rule 27 (Stmt)


state 126

   37 Exp: Exp . ASSIGNOP Exp
   38    | Exp . AND Exp
   39    | Exp . OR Exp
   40    | Exp . RELOP Exp
   41    | Exp . PLUS Exp
   42    | Exp . MINUS Exp
   43    | Exp . STAR Exp
   44    | Exp . DIV Exp
   62 ForCondition: Exp SEMI Exp SEMI Exp .

    RELOP     shift, and go to state 81
    PLUS      shift, and go to state 83
    MINUS     shift, and go to state 84
    STAR      shift, and go to state 85
    DIV       shift, and go to state 86
    ASSIGNOP  shift, and go to state 87
    AND       shift, and go to state 88
    OR        shift, and go to state 89

    $default  reduce using rule 62 (ForCondition)
