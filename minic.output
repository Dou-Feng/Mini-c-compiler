Grammar

    0 $accept: program $end

    1 program: ExtDefList

    2 ExtDefList: /* empty */
    3           | ExtDef ExtDefList

    4 ExtDef: Specifier ExtDecList SEMI
    5       | Specifier FuncDec CompSt
    6       | StructDec SEMI
    7       | error SEMI

    8 StructDec: STRUCT ID LC StructDefList RC

    9 Specifier: TYPE
   10          | STRUCT ID
   11          | TYPE LM RM

   12 ExtDecList: VarDec
   13           | VarDec COMMA ExtDecList

   14 VarDec: ID

   15 FuncDec: ID LP VarList RP
   16        | ID LP RP

   17 VarList: ParamDec
   18        | ParamDec COMMA VarList

   19 ParamDec: Specifier VarDec

   20 CompSt: LC DefList StmList RC

   21 StmList: /* empty */
   22        | Stmt StmList

   23 Stmt: Exp SEMI
   24     | CompSt
   25     | RETURN Exp SEMI
   26     | IF LP Exp RP Stmt
   27     | IF LP Exp RP Stmt ELSE Stmt
   28     | WHILE LP Exp RP Stmt
   29     | FOR LP ForCondition RP Stmt

   30 DefList: /* empty */
   31        | Def DefList

   32 StructDefList: /* empty */
   33              | StructDef StructDefList

   34 Def: Specifier DecList SEMI

   35 StructDef: Specifier StructList SEMI

   36 DecList: Dec
   37        | Dec COMMA DecList

   38 StructList: VarDec
   39           | VarDec COMMA StructList

   40 Dec: VarDec
   41    | VarDec ASSIGNOP Exp

   42 Exp: Exp ASSIGNOP Exp
   43    | Exp AND Exp
   44    | Exp OR Exp
   45    | Exp RELOP Exp
   46    | Exp PLUS Exp
   47    | Exp MINUS Exp
   48    | Exp STAR Exp
   49    | Exp DIV Exp
   50    | LP Exp RP
   51    | MINUS Exp
   52    | NOT Exp
   53    | ID LP Args RP
   54    | ID LP RP
   55    | ID
   56    | INT
   57    | FLOAT
   58    | CHAR
   59    | Exp DECREMENT
   60    | Exp INCREMENT
   61    | INCREMENT Exp
   62    | DECREMENT Exp
   63    | ID DOT ID
   64    | ID LM Exp RM
   65    | BREAK
   66    | CONTINUE

   67 Args: Exp COMMA Args
   68     | Exp

   69 ForCondition: Exp SEMI Exp SEMI Exp


Terminals, with rules where they appear

$end (0) 0
error (256) 7
INT (258) 56
ID (259) 8 10 14 15 16 53 54 55 63 64
RELOP (260) 45
TYPE (261) 9 11
FLOAT (262) 57
CHAR (263) 58
LP (264) 15 16 26 27 28 29 50 53 54
RP (265) 15 16 26 27 28 29 50 53 54
LC (266) 8 20
RC (267) 8 20
SEMI (268) 4 6 7 23 25 34 35 69
COMMA (269) 13 18 37 39 67
LM (270) 11 64
RM (271) 11 64
PLUS (272) 46
MINUS (273) 47 51
STAR (274) 48
DIV (275) 49
ASSIGNOP (276) 41 42
AND (277) 43
OR (278) 44
NOT (279) 52
IF (280) 26 27
ELSE (281) 27
WHILE (282) 28
RETURN (283) 25
INCREMENT (284) 60 61
DECREMENT (285) 59 62
STRUCT (286) 8 10
FOR (287) 29
DOT (288) 63
BREAK (289) 65
CONTINUE (290) 66
UMINUS (291)
PREDECREMENT (292)
PREINCREMENT (293)
LOWER_THEN_ELSE (294)


Nonterminals, with rules where they appear

$accept (40)
    on left: 0
program (41)
    on left: 1, on right: 0
ExtDefList (42)
    on left: 2 3, on right: 1 3
ExtDef (43)
    on left: 4 5 6 7, on right: 3
StructDec (44)
    on left: 8, on right: 6
Specifier (45)
    on left: 9 10 11, on right: 4 5 19 34 35
ExtDecList (46)
    on left: 12 13, on right: 4 13
VarDec (47)
    on left: 14, on right: 12 13 19 38 39 40 41
FuncDec (48)
    on left: 15 16, on right: 5
VarList (49)
    on left: 17 18, on right: 15 18
ParamDec (50)
    on left: 19, on right: 17 18
CompSt (51)
    on left: 20, on right: 5 24
StmList (52)
    on left: 21 22, on right: 20 22
Stmt (53)
    on left: 23 24 25 26 27 28 29, on right: 22 26 27 28 29
DefList (54)
    on left: 30 31, on right: 20 31
StructDefList (55)
    on left: 32 33, on right: 8 33
Def (56)
    on left: 34, on right: 31
StructDef (57)
    on left: 35, on right: 33
DecList (58)
    on left: 36 37, on right: 34 37
StructList (59)
    on left: 38 39, on right: 35 39
Dec (60)
    on left: 40 41, on right: 36 37
Exp (61)
    on left: 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59
    60 61 62 63 64 65 66, on right: 23 25 26 27 28 41 42 43 44 45 46
    47 48 49 50 51 52 59 60 61 62 64 67 68 69
Args (62)
    on left: 67 68, on right: 53 67
ForCondition (63)
    on left: 69, on right: 29


state 0

    0 $accept: . program $end

    error   shift, and go to state 1
    TYPE    shift, and go to state 2
    STRUCT  shift, and go to state 3

    $end  reduce using rule 2 (ExtDefList)

    program     go to state 4
    ExtDefList  go to state 5
    ExtDef      go to state 6
    StructDec   go to state 7
    Specifier   go to state 8


state 1

    7 ExtDef: error . SEMI

    SEMI  shift, and go to state 9


state 2

    9 Specifier: TYPE .
   11          | TYPE . LM RM

    LM  shift, and go to state 10

    $default  reduce using rule 9 (Specifier)


state 3

    8 StructDec: STRUCT . ID LC StructDefList RC
   10 Specifier: STRUCT . ID

    ID  shift, and go to state 11


state 4

    0 $accept: program . $end

    $end  shift, and go to state 12


state 5

    1 program: ExtDefList .

    $default  reduce using rule 1 (program)


state 6

    3 ExtDefList: ExtDef . ExtDefList

    error   shift, and go to state 1
    TYPE    shift, and go to state 2
    STRUCT  shift, and go to state 3

    $end  reduce using rule 2 (ExtDefList)

    ExtDefList  go to state 13
    ExtDef      go to state 6
    StructDec   go to state 7
    Specifier   go to state 8


state 7

    6 ExtDef: StructDec . SEMI

    SEMI  shift, and go to state 14


state 8

    4 ExtDef: Specifier . ExtDecList SEMI
    5       | Specifier . FuncDec CompSt

    ID  shift, and go to state 15

    ExtDecList  go to state 16
    VarDec      go to state 17
    FuncDec     go to state 18


state 9

    7 ExtDef: error SEMI .

    $default  reduce using rule 7 (ExtDef)


state 10

   11 Specifier: TYPE LM . RM

    RM  shift, and go to state 19


state 11

    8 StructDec: STRUCT ID . LC StructDefList RC
   10 Specifier: STRUCT ID .

    LC  shift, and go to state 20

    $default  reduce using rule 10 (Specifier)


state 12

    0 $accept: program $end .

    $default  accept


state 13

    3 ExtDefList: ExtDef ExtDefList .

    $default  reduce using rule 3 (ExtDefList)


state 14

    6 ExtDef: StructDec SEMI .

    $default  reduce using rule 6 (ExtDef)


state 15

   14 VarDec: ID .
   15 FuncDec: ID . LP VarList RP
   16        | ID . LP RP

    LP  shift, and go to state 21

    $default  reduce using rule 14 (VarDec)


state 16

    4 ExtDef: Specifier ExtDecList . SEMI

    SEMI  shift, and go to state 22


state 17

   12 ExtDecList: VarDec .
   13           | VarDec . COMMA ExtDecList

    COMMA  shift, and go to state 23

    $default  reduce using rule 12 (ExtDecList)


state 18

    5 ExtDef: Specifier FuncDec . CompSt

    LC  shift, and go to state 24

    CompSt  go to state 25


state 19

   11 Specifier: TYPE LM RM .

    $default  reduce using rule 11 (Specifier)


state 20

    8 StructDec: STRUCT ID LC . StructDefList RC

    TYPE    shift, and go to state 2
    STRUCT  shift, and go to state 26

    $default  reduce using rule 32 (StructDefList)

    Specifier      go to state 27
    StructDefList  go to state 28
    StructDef      go to state 29


state 21

   15 FuncDec: ID LP . VarList RP
   16        | ID LP . RP

    TYPE    shift, and go to state 2
    RP      shift, and go to state 30
    STRUCT  shift, and go to state 26

    Specifier  go to state 31
    VarList    go to state 32
    ParamDec   go to state 33


state 22

    4 ExtDef: Specifier ExtDecList SEMI .

    $default  reduce using rule 4 (ExtDef)


state 23

   13 ExtDecList: VarDec COMMA . ExtDecList

    ID  shift, and go to state 34

    ExtDecList  go to state 35
    VarDec      go to state 17


state 24

   20 CompSt: LC . DefList StmList RC

    TYPE    shift, and go to state 2
    STRUCT  shift, and go to state 26

    $default  reduce using rule 30 (DefList)

    Specifier  go to state 36
    DefList    go to state 37
    Def        go to state 38


state 25

    5 ExtDef: Specifier FuncDec CompSt .

    $default  reduce using rule 5 (ExtDef)


state 26

   10 Specifier: STRUCT . ID

    ID  shift, and go to state 39


state 27

   35 StructDef: Specifier . StructList SEMI

    ID  shift, and go to state 34

    VarDec      go to state 40
    StructList  go to state 41


state 28

    8 StructDec: STRUCT ID LC StructDefList . RC

    RC  shift, and go to state 42


state 29

   33 StructDefList: StructDef . StructDefList

    TYPE    shift, and go to state 2
    STRUCT  shift, and go to state 26

    $default  reduce using rule 32 (StructDefList)

    Specifier      go to state 27
    StructDefList  go to state 43
    StructDef      go to state 29


state 30

   16 FuncDec: ID LP RP .

    $default  reduce using rule 16 (FuncDec)


state 31

   19 ParamDec: Specifier . VarDec

    ID  shift, and go to state 34

    VarDec  go to state 44


state 32

   15 FuncDec: ID LP VarList . RP

    RP  shift, and go to state 45


state 33

   17 VarList: ParamDec .
   18        | ParamDec . COMMA VarList

    COMMA  shift, and go to state 46

    $default  reduce using rule 17 (VarList)


state 34

   14 VarDec: ID .

    $default  reduce using rule 14 (VarDec)


state 35

   13 ExtDecList: VarDec COMMA ExtDecList .

    $default  reduce using rule 13 (ExtDecList)


state 36

   34 Def: Specifier . DecList SEMI

    ID  shift, and go to state 34

    VarDec   go to state 47
    DecList  go to state 48
    Dec      go to state 49


state 37

   20 CompSt: LC DefList . StmList RC

    INT        shift, and go to state 50
    ID         shift, and go to state 51
    FLOAT      shift, and go to state 52
    CHAR       shift, and go to state 53
    LP         shift, and go to state 54
    LC         shift, and go to state 24
    MINUS      shift, and go to state 55
    NOT        shift, and go to state 56
    IF         shift, and go to state 57
    WHILE      shift, and go to state 58
    RETURN     shift, and go to state 59
    INCREMENT  shift, and go to state 60
    DECREMENT  shift, and go to state 61
    FOR        shift, and go to state 62
    BREAK      shift, and go to state 63
    CONTINUE   shift, and go to state 64

    $default  reduce using rule 21 (StmList)

    CompSt   go to state 65
    StmList  go to state 66
    Stmt     go to state 67
    Exp      go to state 68


state 38

   31 DefList: Def . DefList

    TYPE    shift, and go to state 2
    STRUCT  shift, and go to state 26

    $default  reduce using rule 30 (DefList)

    Specifier  go to state 36
    DefList    go to state 69
    Def        go to state 38


state 39

   10 Specifier: STRUCT ID .

    $default  reduce using rule 10 (Specifier)


state 40

   38 StructList: VarDec .
   39           | VarDec . COMMA StructList

    COMMA  shift, and go to state 70

    $default  reduce using rule 38 (StructList)


state 41

   35 StructDef: Specifier StructList . SEMI

    SEMI  shift, and go to state 71


state 42

    8 StructDec: STRUCT ID LC StructDefList RC .

    $default  reduce using rule 8 (StructDec)


state 43

   33 StructDefList: StructDef StructDefList .

    $default  reduce using rule 33 (StructDefList)


state 44

   19 ParamDec: Specifier VarDec .

    $default  reduce using rule 19 (ParamDec)


state 45

   15 FuncDec: ID LP VarList RP .

    $default  reduce using rule 15 (FuncDec)


state 46

   18 VarList: ParamDec COMMA . VarList

    TYPE    shift, and go to state 2
    STRUCT  shift, and go to state 26

    Specifier  go to state 31
    VarList    go to state 72
    ParamDec   go to state 33


state 47

   40 Dec: VarDec .
   41    | VarDec . ASSIGNOP Exp

    ASSIGNOP  shift, and go to state 73

    $default  reduce using rule 40 (Dec)


state 48

   34 Def: Specifier DecList . SEMI

    SEMI  shift, and go to state 74


state 49

   36 DecList: Dec .
   37        | Dec . COMMA DecList

    COMMA  shift, and go to state 75

    $default  reduce using rule 36 (DecList)


state 50

   56 Exp: INT .

    $default  reduce using rule 56 (Exp)


state 51

   53 Exp: ID . LP Args RP
   54    | ID . LP RP
   55    | ID .
   63    | ID . DOT ID
   64    | ID . LM Exp RM

    LP   shift, and go to state 76
    LM   shift, and go to state 77
    DOT  shift, and go to state 78

    $default  reduce using rule 55 (Exp)


state 52

   57 Exp: FLOAT .

    $default  reduce using rule 57 (Exp)


state 53

   58 Exp: CHAR .

    $default  reduce using rule 58 (Exp)


state 54

   50 Exp: LP . Exp RP

    INT        shift, and go to state 50
    ID         shift, and go to state 51
    FLOAT      shift, and go to state 52
    CHAR       shift, and go to state 53
    LP         shift, and go to state 54
    MINUS      shift, and go to state 55
    NOT        shift, and go to state 56
    INCREMENT  shift, and go to state 60
    DECREMENT  shift, and go to state 61
    BREAK      shift, and go to state 63
    CONTINUE   shift, and go to state 64

    Exp  go to state 79


state 55

   51 Exp: MINUS . Exp

    INT        shift, and go to state 50
    ID         shift, and go to state 51
    FLOAT      shift, and go to state 52
    CHAR       shift, and go to state 53
    LP         shift, and go to state 54
    MINUS      shift, and go to state 55
    NOT        shift, and go to state 56
    INCREMENT  shift, and go to state 60
    DECREMENT  shift, and go to state 61
    BREAK      shift, and go to state 63
    CONTINUE   shift, and go to state 64

    Exp  go to state 80


state 56

   52 Exp: NOT . Exp

    INT        shift, and go to state 50
    ID         shift, and go to state 51
    FLOAT      shift, and go to state 52
    CHAR       shift, and go to state 53
    LP         shift, and go to state 54
    MINUS      shift, and go to state 55
    NOT        shift, and go to state 56
    INCREMENT  shift, and go to state 60
    DECREMENT  shift, and go to state 61
    BREAK      shift, and go to state 63
    CONTINUE   shift, and go to state 64

    Exp  go to state 81


state 57

   26 Stmt: IF . LP Exp RP Stmt
   27     | IF . LP Exp RP Stmt ELSE Stmt

    LP  shift, and go to state 82


state 58

   28 Stmt: WHILE . LP Exp RP Stmt

    LP  shift, and go to state 83


state 59

   25 Stmt: RETURN . Exp SEMI

    INT        shift, and go to state 50
    ID         shift, and go to state 51
    FLOAT      shift, and go to state 52
    CHAR       shift, and go to state 53
    LP         shift, and go to state 54
    MINUS      shift, and go to state 55
    NOT        shift, and go to state 56
    INCREMENT  shift, and go to state 60
    DECREMENT  shift, and go to state 61
    BREAK      shift, and go to state 63
    CONTINUE   shift, and go to state 64

    Exp  go to state 84


state 60

   61 Exp: INCREMENT . Exp

    INT        shift, and go to state 50
    ID         shift, and go to state 51
    FLOAT      shift, and go to state 52
    CHAR       shift, and go to state 53
    LP         shift, and go to state 54
    MINUS      shift, and go to state 55
    NOT        shift, and go to state 56
    INCREMENT  shift, and go to state 60
    DECREMENT  shift, and go to state 61
    BREAK      shift, and go to state 63
    CONTINUE   shift, and go to state 64

    Exp  go to state 85


state 61

   62 Exp: DECREMENT . Exp

    INT        shift, and go to state 50
    ID         shift, and go to state 51
    FLOAT      shift, and go to state 52
    CHAR       shift, and go to state 53
    LP         shift, and go to state 54
    MINUS      shift, and go to state 55
    NOT        shift, and go to state 56
    INCREMENT  shift, and go to state 60
    DECREMENT  shift, and go to state 61
    BREAK      shift, and go to state 63
    CONTINUE   shift, and go to state 64

    Exp  go to state 86


state 62

   29 Stmt: FOR . LP ForCondition RP Stmt

    LP  shift, and go to state 87


state 63

   65 Exp: BREAK .

    $default  reduce using rule 65 (Exp)


state 64

   66 Exp: CONTINUE .

    $default  reduce using rule 66 (Exp)


state 65

   24 Stmt: CompSt .

    $default  reduce using rule 24 (Stmt)


state 66

   20 CompSt: LC DefList StmList . RC

    RC  shift, and go to state 88


state 67

   22 StmList: Stmt . StmList

    INT        shift, and go to state 50
    ID         shift, and go to state 51
    FLOAT      shift, and go to state 52
    CHAR       shift, and go to state 53
    LP         shift, and go to state 54
    LC         shift, and go to state 24
    MINUS      shift, and go to state 55
    NOT        shift, and go to state 56
    IF         shift, and go to state 57
    WHILE      shift, and go to state 58
    RETURN     shift, and go to state 59
    INCREMENT  shift, and go to state 60
    DECREMENT  shift, and go to state 61
    FOR        shift, and go to state 62
    BREAK      shift, and go to state 63
    CONTINUE   shift, and go to state 64

    $default  reduce using rule 21 (StmList)

    CompSt   go to state 65
    StmList  go to state 89
    Stmt     go to state 67
    Exp      go to state 68


state 68

   23 Stmt: Exp . SEMI
   42 Exp: Exp . ASSIGNOP Exp
   43    | Exp . AND Exp
   44    | Exp . OR Exp
   45    | Exp . RELOP Exp
   46    | Exp . PLUS Exp
   47    | Exp . MINUS Exp
   48    | Exp . STAR Exp
   49    | Exp . DIV Exp
   59    | Exp . DECREMENT
   60    | Exp . INCREMENT

    RELOP      shift, and go to state 90
    SEMI       shift, and go to state 91
    PLUS       shift, and go to state 92
    MINUS      shift, and go to state 93
    STAR       shift, and go to state 94
    DIV        shift, and go to state 95
    ASSIGNOP   shift, and go to state 96
    AND        shift, and go to state 97
    OR         shift, and go to state 98
    INCREMENT  shift, and go to state 99
    DECREMENT  shift, and go to state 100


state 69

   31 DefList: Def DefList .

    $default  reduce using rule 31 (DefList)


state 70

   39 StructList: VarDec COMMA . StructList

    ID  shift, and go to state 34

    VarDec      go to state 40
    StructList  go to state 101


state 71

   35 StructDef: Specifier StructList SEMI .

    $default  reduce using rule 35 (StructDef)


state 72

   18 VarList: ParamDec COMMA VarList .

    $default  reduce using rule 18 (VarList)


state 73

   41 Dec: VarDec ASSIGNOP . Exp

    INT        shift, and go to state 50
    ID         shift, and go to state 51
    FLOAT      shift, and go to state 52
    CHAR       shift, and go to state 53
    LP         shift, and go to state 54
    MINUS      shift, and go to state 55
    NOT        shift, and go to state 56
    INCREMENT  shift, and go to state 60
    DECREMENT  shift, and go to state 61
    BREAK      shift, and go to state 63
    CONTINUE   shift, and go to state 64

    Exp  go to state 102


state 74

   34 Def: Specifier DecList SEMI .

    $default  reduce using rule 34 (Def)


state 75

   37 DecList: Dec COMMA . DecList

    ID  shift, and go to state 34

    VarDec   go to state 47
    DecList  go to state 103
    Dec      go to state 49


state 76

   53 Exp: ID LP . Args RP
   54    | ID LP . RP

    INT        shift, and go to state 50
    ID         shift, and go to state 51
    FLOAT      shift, and go to state 52
    CHAR       shift, and go to state 53
    LP         shift, and go to state 54
    RP         shift, and go to state 104
    MINUS      shift, and go to state 55
    NOT        shift, and go to state 56
    INCREMENT  shift, and go to state 60
    DECREMENT  shift, and go to state 61
    BREAK      shift, and go to state 63
    CONTINUE   shift, and go to state 64

    Exp   go to state 105
    Args  go to state 106


state 77

   64 Exp: ID LM . Exp RM

    INT        shift, and go to state 50
    ID         shift, and go to state 51
    FLOAT      shift, and go to state 52
    CHAR       shift, and go to state 53
    LP         shift, and go to state 54
    MINUS      shift, and go to state 55
    NOT        shift, and go to state 56
    INCREMENT  shift, and go to state 60
    DECREMENT  shift, and go to state 61
    BREAK      shift, and go to state 63
    CONTINUE   shift, and go to state 64

    Exp  go to state 107


state 78

   63 Exp: ID DOT . ID

    ID  shift, and go to state 108


state 79

   42 Exp: Exp . ASSIGNOP Exp
   43    | Exp . AND Exp
   44    | Exp . OR Exp
   45    | Exp . RELOP Exp
   46    | Exp . PLUS Exp
   47    | Exp . MINUS Exp
   48    | Exp . STAR Exp
   49    | Exp . DIV Exp
   50    | LP Exp . RP
   59    | Exp . DECREMENT
   60    | Exp . INCREMENT

    RELOP      shift, and go to state 90
    RP         shift, and go to state 109
    PLUS       shift, and go to state 92
    MINUS      shift, and go to state 93
    STAR       shift, and go to state 94
    DIV        shift, and go to state 95
    ASSIGNOP   shift, and go to state 96
    AND        shift, and go to state 97
    OR         shift, and go to state 98
    INCREMENT  shift, and go to state 99
    DECREMENT  shift, and go to state 100


state 80

   42 Exp: Exp . ASSIGNOP Exp
   43    | Exp . AND Exp
   44    | Exp . OR Exp
   45    | Exp . RELOP Exp
   46    | Exp . PLUS Exp
   47    | Exp . MINUS Exp
   48    | Exp . STAR Exp
   49    | Exp . DIV Exp
   51    | MINUS Exp .
   59    | Exp . DECREMENT
   60    | Exp . INCREMENT

    INCREMENT  shift, and go to state 99
    DECREMENT  shift, and go to state 100

    $default  reduce using rule 51 (Exp)


state 81

   42 Exp: Exp . ASSIGNOP Exp
   43    | Exp . AND Exp
   44    | Exp . OR Exp
   45    | Exp . RELOP Exp
   46    | Exp . PLUS Exp
   47    | Exp . MINUS Exp
   48    | Exp . STAR Exp
   49    | Exp . DIV Exp
   52    | NOT Exp .
   59    | Exp . DECREMENT
   60    | Exp . INCREMENT

    INCREMENT  shift, and go to state 99
    DECREMENT  shift, and go to state 100

    $default  reduce using rule 52 (Exp)


state 82

   26 Stmt: IF LP . Exp RP Stmt
   27     | IF LP . Exp RP Stmt ELSE Stmt

    INT        shift, and go to state 50
    ID         shift, and go to state 51
    FLOAT      shift, and go to state 52
    CHAR       shift, and go to state 53
    LP         shift, and go to state 54
    MINUS      shift, and go to state 55
    NOT        shift, and go to state 56
    INCREMENT  shift, and go to state 60
    DECREMENT  shift, and go to state 61
    BREAK      shift, and go to state 63
    CONTINUE   shift, and go to state 64

    Exp  go to state 110


state 83

   28 Stmt: WHILE LP . Exp RP Stmt

    INT        shift, and go to state 50
    ID         shift, and go to state 51
    FLOAT      shift, and go to state 52
    CHAR       shift, and go to state 53
    LP         shift, and go to state 54
    MINUS      shift, and go to state 55
    NOT        shift, and go to state 56
    INCREMENT  shift, and go to state 60
    DECREMENT  shift, and go to state 61
    BREAK      shift, and go to state 63
    CONTINUE   shift, and go to state 64

    Exp  go to state 111


state 84

   25 Stmt: RETURN Exp . SEMI
   42 Exp: Exp . ASSIGNOP Exp
   43    | Exp . AND Exp
   44    | Exp . OR Exp
   45    | Exp . RELOP Exp
   46    | Exp . PLUS Exp
   47    | Exp . MINUS Exp
   48    | Exp . STAR Exp
   49    | Exp . DIV Exp
   59    | Exp . DECREMENT
   60    | Exp . INCREMENT

    RELOP      shift, and go to state 90
    SEMI       shift, and go to state 112
    PLUS       shift, and go to state 92
    MINUS      shift, and go to state 93
    STAR       shift, and go to state 94
    DIV        shift, and go to state 95
    ASSIGNOP   shift, and go to state 96
    AND        shift, and go to state 97
    OR         shift, and go to state 98
    INCREMENT  shift, and go to state 99
    DECREMENT  shift, and go to state 100


state 85

   42 Exp: Exp . ASSIGNOP Exp
   43    | Exp . AND Exp
   44    | Exp . OR Exp
   45    | Exp . RELOP Exp
   46    | Exp . PLUS Exp
   47    | Exp . MINUS Exp
   48    | Exp . STAR Exp
   49    | Exp . DIV Exp
   59    | Exp . DECREMENT
   60    | Exp . INCREMENT
   61    | INCREMENT Exp .

    $default  reduce using rule 61 (Exp)


state 86

   42 Exp: Exp . ASSIGNOP Exp
   43    | Exp . AND Exp
   44    | Exp . OR Exp
   45    | Exp . RELOP Exp
   46    | Exp . PLUS Exp
   47    | Exp . MINUS Exp
   48    | Exp . STAR Exp
   49    | Exp . DIV Exp
   59    | Exp . DECREMENT
   60    | Exp . INCREMENT
   62    | DECREMENT Exp .

    $default  reduce using rule 62 (Exp)


state 87

   29 Stmt: FOR LP . ForCondition RP Stmt

    INT        shift, and go to state 50
    ID         shift, and go to state 51
    FLOAT      shift, and go to state 52
    CHAR       shift, and go to state 53
    LP         shift, and go to state 54
    MINUS      shift, and go to state 55
    NOT        shift, and go to state 56
    INCREMENT  shift, and go to state 60
    DECREMENT  shift, and go to state 61
    BREAK      shift, and go to state 63
    CONTINUE   shift, and go to state 64

    Exp           go to state 113
    ForCondition  go to state 114


state 88

   20 CompSt: LC DefList StmList RC .

    $default  reduce using rule 20 (CompSt)


state 89

   22 StmList: Stmt StmList .

    $default  reduce using rule 22 (StmList)


state 90

   45 Exp: Exp RELOP . Exp

    INT        shift, and go to state 50
    ID         shift, and go to state 51
    FLOAT      shift, and go to state 52
    CHAR       shift, and go to state 53
    LP         shift, and go to state 54
    MINUS      shift, and go to state 55
    NOT        shift, and go to state 56
    INCREMENT  shift, and go to state 60
    DECREMENT  shift, and go to state 61
    BREAK      shift, and go to state 63
    CONTINUE   shift, and go to state 64

    Exp  go to state 115


state 91

   23 Stmt: Exp SEMI .

    $default  reduce using rule 23 (Stmt)


state 92

   46 Exp: Exp PLUS . Exp

    INT        shift, and go to state 50
    ID         shift, and go to state 51
    FLOAT      shift, and go to state 52
    CHAR       shift, and go to state 53
    LP         shift, and go to state 54
    MINUS      shift, and go to state 55
    NOT        shift, and go to state 56
    INCREMENT  shift, and go to state 60
    DECREMENT  shift, and go to state 61
    BREAK      shift, and go to state 63
    CONTINUE   shift, and go to state 64

    Exp  go to state 116


state 93

   47 Exp: Exp MINUS . Exp

    INT        shift, and go to state 50
    ID         shift, and go to state 51
    FLOAT      shift, and go to state 52
    CHAR       shift, and go to state 53
    LP         shift, and go to state 54
    MINUS      shift, and go to state 55
    NOT        shift, and go to state 56
    INCREMENT  shift, and go to state 60
    DECREMENT  shift, and go to state 61
    BREAK      shift, and go to state 63
    CONTINUE   shift, and go to state 64

    Exp  go to state 117


state 94

   48 Exp: Exp STAR . Exp

    INT        shift, and go to state 50
    ID         shift, and go to state 51
    FLOAT      shift, and go to state 52
    CHAR       shift, and go to state 53
    LP         shift, and go to state 54
    MINUS      shift, and go to state 55
    NOT        shift, and go to state 56
    INCREMENT  shift, and go to state 60
    DECREMENT  shift, and go to state 61
    BREAK      shift, and go to state 63
    CONTINUE   shift, and go to state 64

    Exp  go to state 118


state 95

   49 Exp: Exp DIV . Exp

    INT        shift, and go to state 50
    ID         shift, and go to state 51
    FLOAT      shift, and go to state 52
    CHAR       shift, and go to state 53
    LP         shift, and go to state 54
    MINUS      shift, and go to state 55
    NOT        shift, and go to state 56
    INCREMENT  shift, and go to state 60
    DECREMENT  shift, and go to state 61
    BREAK      shift, and go to state 63
    CONTINUE   shift, and go to state 64

    Exp  go to state 119


state 96

   42 Exp: Exp ASSIGNOP . Exp

    INT        shift, and go to state 50
    ID         shift, and go to state 51
    FLOAT      shift, and go to state 52
    CHAR       shift, and go to state 53
    LP         shift, and go to state 54
    MINUS      shift, and go to state 55
    NOT        shift, and go to state 56
    INCREMENT  shift, and go to state 60
    DECREMENT  shift, and go to state 61
    BREAK      shift, and go to state 63
    CONTINUE   shift, and go to state 64

    Exp  go to state 120


state 97

   43 Exp: Exp AND . Exp

    INT        shift, and go to state 50
    ID         shift, and go to state 51
    FLOAT      shift, and go to state 52
    CHAR       shift, and go to state 53
    LP         shift, and go to state 54
    MINUS      shift, and go to state 55
    NOT        shift, and go to state 56
    INCREMENT  shift, and go to state 60
    DECREMENT  shift, and go to state 61
    BREAK      shift, and go to state 63
    CONTINUE   shift, and go to state 64

    Exp  go to state 121


state 98

   44 Exp: Exp OR . Exp

    INT        shift, and go to state 50
    ID         shift, and go to state 51
    FLOAT      shift, and go to state 52
    CHAR       shift, and go to state 53
    LP         shift, and go to state 54
    MINUS      shift, and go to state 55
    NOT        shift, and go to state 56
    INCREMENT  shift, and go to state 60
    DECREMENT  shift, and go to state 61
    BREAK      shift, and go to state 63
    CONTINUE   shift, and go to state 64

    Exp  go to state 122


state 99

   60 Exp: Exp INCREMENT .

    $default  reduce using rule 60 (Exp)


state 100

   59 Exp: Exp DECREMENT .

    $default  reduce using rule 59 (Exp)


state 101

   39 StructList: VarDec COMMA StructList .

    $default  reduce using rule 39 (StructList)


state 102

   41 Dec: VarDec ASSIGNOP Exp .
   42 Exp: Exp . ASSIGNOP Exp
   43    | Exp . AND Exp
   44    | Exp . OR Exp
   45    | Exp . RELOP Exp
   46    | Exp . PLUS Exp
   47    | Exp . MINUS Exp
   48    | Exp . STAR Exp
   49    | Exp . DIV Exp
   59    | Exp . DECREMENT
   60    | Exp . INCREMENT

    RELOP      shift, and go to state 90
    PLUS       shift, and go to state 92
    MINUS      shift, and go to state 93
    STAR       shift, and go to state 94
    DIV        shift, and go to state 95
    ASSIGNOP   shift, and go to state 96
    AND        shift, and go to state 97
    OR         shift, and go to state 98
    INCREMENT  shift, and go to state 99
    DECREMENT  shift, and go to state 100

    $default  reduce using rule 41 (Dec)


state 103

   37 DecList: Dec COMMA DecList .

    $default  reduce using rule 37 (DecList)


state 104

   54 Exp: ID LP RP .

    $default  reduce using rule 54 (Exp)


state 105

   42 Exp: Exp . ASSIGNOP Exp
   43    | Exp . AND Exp
   44    | Exp . OR Exp
   45    | Exp . RELOP Exp
   46    | Exp . PLUS Exp
   47    | Exp . MINUS Exp
   48    | Exp . STAR Exp
   49    | Exp . DIV Exp
   59    | Exp . DECREMENT
   60    | Exp . INCREMENT
   67 Args: Exp . COMMA Args
   68     | Exp .

    RELOP      shift, and go to state 90
    COMMA      shift, and go to state 123
    PLUS       shift, and go to state 92
    MINUS      shift, and go to state 93
    STAR       shift, and go to state 94
    DIV        shift, and go to state 95
    ASSIGNOP   shift, and go to state 96
    AND        shift, and go to state 97
    OR         shift, and go to state 98
    INCREMENT  shift, and go to state 99
    DECREMENT  shift, and go to state 100

    $default  reduce using rule 68 (Args)


state 106

   53 Exp: ID LP Args . RP

    RP  shift, and go to state 124


state 107

   42 Exp: Exp . ASSIGNOP Exp
   43    | Exp . AND Exp
   44    | Exp . OR Exp
   45    | Exp . RELOP Exp
   46    | Exp . PLUS Exp
   47    | Exp . MINUS Exp
   48    | Exp . STAR Exp
   49    | Exp . DIV Exp
   59    | Exp . DECREMENT
   60    | Exp . INCREMENT
   64    | ID LM Exp . RM

    RELOP      shift, and go to state 90
    RM         shift, and go to state 125
    PLUS       shift, and go to state 92
    MINUS      shift, and go to state 93
    STAR       shift, and go to state 94
    DIV        shift, and go to state 95
    ASSIGNOP   shift, and go to state 96
    AND        shift, and go to state 97
    OR         shift, and go to state 98
    INCREMENT  shift, and go to state 99
    DECREMENT  shift, and go to state 100


state 108

   63 Exp: ID DOT ID .

    $default  reduce using rule 63 (Exp)


state 109

   50 Exp: LP Exp RP .

    $default  reduce using rule 50 (Exp)


state 110

   26 Stmt: IF LP Exp . RP Stmt
   27     | IF LP Exp . RP Stmt ELSE Stmt
   42 Exp: Exp . ASSIGNOP Exp
   43    | Exp . AND Exp
   44    | Exp . OR Exp
   45    | Exp . RELOP Exp
   46    | Exp . PLUS Exp
   47    | Exp . MINUS Exp
   48    | Exp . STAR Exp
   49    | Exp . DIV Exp
   59    | Exp . DECREMENT
   60    | Exp . INCREMENT

    RELOP      shift, and go to state 90
    RP         shift, and go to state 126
    PLUS       shift, and go to state 92
    MINUS      shift, and go to state 93
    STAR       shift, and go to state 94
    DIV        shift, and go to state 95
    ASSIGNOP   shift, and go to state 96
    AND        shift, and go to state 97
    OR         shift, and go to state 98
    INCREMENT  shift, and go to state 99
    DECREMENT  shift, and go to state 100


state 111

   28 Stmt: WHILE LP Exp . RP Stmt
   42 Exp: Exp . ASSIGNOP Exp
   43    | Exp . AND Exp
   44    | Exp . OR Exp
   45    | Exp . RELOP Exp
   46    | Exp . PLUS Exp
   47    | Exp . MINUS Exp
   48    | Exp . STAR Exp
   49    | Exp . DIV Exp
   59    | Exp . DECREMENT
   60    | Exp . INCREMENT

    RELOP      shift, and go to state 90
    RP         shift, and go to state 127
    PLUS       shift, and go to state 92
    MINUS      shift, and go to state 93
    STAR       shift, and go to state 94
    DIV        shift, and go to state 95
    ASSIGNOP   shift, and go to state 96
    AND        shift, and go to state 97
    OR         shift, and go to state 98
    INCREMENT  shift, and go to state 99
    DECREMENT  shift, and go to state 100


state 112

   25 Stmt: RETURN Exp SEMI .

    $default  reduce using rule 25 (Stmt)


state 113

   42 Exp: Exp . ASSIGNOP Exp
   43    | Exp . AND Exp
   44    | Exp . OR Exp
   45    | Exp . RELOP Exp
   46    | Exp . PLUS Exp
   47    | Exp . MINUS Exp
   48    | Exp . STAR Exp
   49    | Exp . DIV Exp
   59    | Exp . DECREMENT
   60    | Exp . INCREMENT
   69 ForCondition: Exp . SEMI Exp SEMI Exp

    RELOP      shift, and go to state 90
    SEMI       shift, and go to state 128
    PLUS       shift, and go to state 92
    MINUS      shift, and go to state 93
    STAR       shift, and go to state 94
    DIV        shift, and go to state 95
    ASSIGNOP   shift, and go to state 96
    AND        shift, and go to state 97
    OR         shift, and go to state 98
    INCREMENT  shift, and go to state 99
    DECREMENT  shift, and go to state 100


state 114

   29 Stmt: FOR LP ForCondition . RP Stmt

    RP  shift, and go to state 129


state 115

   42 Exp: Exp . ASSIGNOP Exp
   43    | Exp . AND Exp
   44    | Exp . OR Exp
   45    | Exp . RELOP Exp
   45    | Exp RELOP Exp .
   46    | Exp . PLUS Exp
   47    | Exp . MINUS Exp
   48    | Exp . STAR Exp
   49    | Exp . DIV Exp
   59    | Exp . DECREMENT
   60    | Exp . INCREMENT

    PLUS       shift, and go to state 92
    MINUS      shift, and go to state 93
    STAR       shift, and go to state 94
    DIV        shift, and go to state 95
    INCREMENT  shift, and go to state 99
    DECREMENT  shift, and go to state 100

    $default  reduce using rule 45 (Exp)


state 116

   42 Exp: Exp . ASSIGNOP Exp
   43    | Exp . AND Exp
   44    | Exp . OR Exp
   45    | Exp . RELOP Exp
   46    | Exp . PLUS Exp
   46    | Exp PLUS Exp .
   47    | Exp . MINUS Exp
   48    | Exp . STAR Exp
   49    | Exp . DIV Exp
   59    | Exp . DECREMENT
   60    | Exp . INCREMENT

    STAR       shift, and go to state 94
    DIV        shift, and go to state 95
    INCREMENT  shift, and go to state 99
    DECREMENT  shift, and go to state 100

    $default  reduce using rule 46 (Exp)


state 117

   42 Exp: Exp . ASSIGNOP Exp
   43    | Exp . AND Exp
   44    | Exp . OR Exp
   45    | Exp . RELOP Exp
   46    | Exp . PLUS Exp
   47    | Exp . MINUS Exp
   47    | Exp MINUS Exp .
   48    | Exp . STAR Exp
   49    | Exp . DIV Exp
   59    | Exp . DECREMENT
   60    | Exp . INCREMENT

    STAR       shift, and go to state 94
    DIV        shift, and go to state 95
    INCREMENT  shift, and go to state 99
    DECREMENT  shift, and go to state 100

    $default  reduce using rule 47 (Exp)


state 118

   42 Exp: Exp . ASSIGNOP Exp
   43    | Exp . AND Exp
   44    | Exp . OR Exp
   45    | Exp . RELOP Exp
   46    | Exp . PLUS Exp
   47    | Exp . MINUS Exp
   48    | Exp . STAR Exp
   48    | Exp STAR Exp .
   49    | Exp . DIV Exp
   59    | Exp . DECREMENT
   60    | Exp . INCREMENT

    INCREMENT  shift, and go to state 99
    DECREMENT  shift, and go to state 100

    $default  reduce using rule 48 (Exp)


state 119

   42 Exp: Exp . ASSIGNOP Exp
   43    | Exp . AND Exp
   44    | Exp . OR Exp
   45    | Exp . RELOP Exp
   46    | Exp . PLUS Exp
   47    | Exp . MINUS Exp
   48    | Exp . STAR Exp
   49    | Exp . DIV Exp
   49    | Exp DIV Exp .
   59    | Exp . DECREMENT
   60    | Exp . INCREMENT

    INCREMENT  shift, and go to state 99
    DECREMENT  shift, and go to state 100

    $default  reduce using rule 49 (Exp)


state 120

   42 Exp: Exp . ASSIGNOP Exp
   42    | Exp ASSIGNOP Exp .
   43    | Exp . AND Exp
   44    | Exp . OR Exp
   45    | Exp . RELOP Exp
   46    | Exp . PLUS Exp
   47    | Exp . MINUS Exp
   48    | Exp . STAR Exp
   49    | Exp . DIV Exp
   59    | Exp . DECREMENT
   60    | Exp . INCREMENT

    RELOP      shift, and go to state 90
    PLUS       shift, and go to state 92
    MINUS      shift, and go to state 93
    STAR       shift, and go to state 94
    DIV        shift, and go to state 95
    AND        shift, and go to state 97
    OR         shift, and go to state 98
    INCREMENT  shift, and go to state 99
    DECREMENT  shift, and go to state 100

    $default  reduce using rule 42 (Exp)


state 121

   42 Exp: Exp . ASSIGNOP Exp
   43    | Exp . AND Exp
   43    | Exp AND Exp .
   44    | Exp . OR Exp
   45    | Exp . RELOP Exp
   46    | Exp . PLUS Exp
   47    | Exp . MINUS Exp
   48    | Exp . STAR Exp
   49    | Exp . DIV Exp
   59    | Exp . DECREMENT
   60    | Exp . INCREMENT

    RELOP      shift, and go to state 90
    PLUS       shift, and go to state 92
    MINUS      shift, and go to state 93
    STAR       shift, and go to state 94
    DIV        shift, and go to state 95
    INCREMENT  shift, and go to state 99
    DECREMENT  shift, and go to state 100

    $default  reduce using rule 43 (Exp)


state 122

   42 Exp: Exp . ASSIGNOP Exp
   43    | Exp . AND Exp
   44    | Exp . OR Exp
   44    | Exp OR Exp .
   45    | Exp . RELOP Exp
   46    | Exp . PLUS Exp
   47    | Exp . MINUS Exp
   48    | Exp . STAR Exp
   49    | Exp . DIV Exp
   59    | Exp . DECREMENT
   60    | Exp . INCREMENT

    RELOP      shift, and go to state 90
    PLUS       shift, and go to state 92
    MINUS      shift, and go to state 93
    STAR       shift, and go to state 94
    DIV        shift, and go to state 95
    AND        shift, and go to state 97
    INCREMENT  shift, and go to state 99
    DECREMENT  shift, and go to state 100

    $default  reduce using rule 44 (Exp)


state 123

   67 Args: Exp COMMA . Args

    INT        shift, and go to state 50
    ID         shift, and go to state 51
    FLOAT      shift, and go to state 52
    CHAR       shift, and go to state 53
    LP         shift, and go to state 54
    MINUS      shift, and go to state 55
    NOT        shift, and go to state 56
    INCREMENT  shift, and go to state 60
    DECREMENT  shift, and go to state 61
    BREAK      shift, and go to state 63
    CONTINUE   shift, and go to state 64

    Exp   go to state 105
    Args  go to state 130


state 124

   53 Exp: ID LP Args RP .

    $default  reduce using rule 53 (Exp)


state 125

   64 Exp: ID LM Exp RM .

    $default  reduce using rule 64 (Exp)


state 126

   26 Stmt: IF LP Exp RP . Stmt
   27     | IF LP Exp RP . Stmt ELSE Stmt

    INT        shift, and go to state 50
    ID         shift, and go to state 51
    FLOAT      shift, and go to state 52
    CHAR       shift, and go to state 53
    LP         shift, and go to state 54
    LC         shift, and go to state 24
    MINUS      shift, and go to state 55
    NOT        shift, and go to state 56
    IF         shift, and go to state 57
    WHILE      shift, and go to state 58
    RETURN     shift, and go to state 59
    INCREMENT  shift, and go to state 60
    DECREMENT  shift, and go to state 61
    FOR        shift, and go to state 62
    BREAK      shift, and go to state 63
    CONTINUE   shift, and go to state 64

    CompSt  go to state 65
    Stmt    go to state 131
    Exp     go to state 68


state 127

   28 Stmt: WHILE LP Exp RP . Stmt

    INT        shift, and go to state 50
    ID         shift, and go to state 51
    FLOAT      shift, and go to state 52
    CHAR       shift, and go to state 53
    LP         shift, and go to state 54
    LC         shift, and go to state 24
    MINUS      shift, and go to state 55
    NOT        shift, and go to state 56
    IF         shift, and go to state 57
    WHILE      shift, and go to state 58
    RETURN     shift, and go to state 59
    INCREMENT  shift, and go to state 60
    DECREMENT  shift, and go to state 61
    FOR        shift, and go to state 62
    BREAK      shift, and go to state 63
    CONTINUE   shift, and go to state 64

    CompSt  go to state 65
    Stmt    go to state 132
    Exp     go to state 68


state 128

   69 ForCondition: Exp SEMI . Exp SEMI Exp

    INT        shift, and go to state 50
    ID         shift, and go to state 51
    FLOAT      shift, and go to state 52
    CHAR       shift, and go to state 53
    LP         shift, and go to state 54
    MINUS      shift, and go to state 55
    NOT        shift, and go to state 56
    INCREMENT  shift, and go to state 60
    DECREMENT  shift, and go to state 61
    BREAK      shift, and go to state 63
    CONTINUE   shift, and go to state 64

    Exp  go to state 133


state 129

   29 Stmt: FOR LP ForCondition RP . Stmt

    INT        shift, and go to state 50
    ID         shift, and go to state 51
    FLOAT      shift, and go to state 52
    CHAR       shift, and go to state 53
    LP         shift, and go to state 54
    LC         shift, and go to state 24
    MINUS      shift, and go to state 55
    NOT        shift, and go to state 56
    IF         shift, and go to state 57
    WHILE      shift, and go to state 58
    RETURN     shift, and go to state 59
    INCREMENT  shift, and go to state 60
    DECREMENT  shift, and go to state 61
    FOR        shift, and go to state 62
    BREAK      shift, and go to state 63
    CONTINUE   shift, and go to state 64

    CompSt  go to state 65
    Stmt    go to state 134
    Exp     go to state 68


state 130

   67 Args: Exp COMMA Args .

    $default  reduce using rule 67 (Args)


state 131

   26 Stmt: IF LP Exp RP Stmt .
   27     | IF LP Exp RP Stmt . ELSE Stmt

    ELSE  shift, and go to state 135

    $default  reduce using rule 26 (Stmt)


state 132

   28 Stmt: WHILE LP Exp RP Stmt .

    $default  reduce using rule 28 (Stmt)


state 133

   42 Exp: Exp . ASSIGNOP Exp
   43    | Exp . AND Exp
   44    | Exp . OR Exp
   45    | Exp . RELOP Exp
   46    | Exp . PLUS Exp
   47    | Exp . MINUS Exp
   48    | Exp . STAR Exp
   49    | Exp . DIV Exp
   59    | Exp . DECREMENT
   60    | Exp . INCREMENT
   69 ForCondition: Exp SEMI Exp . SEMI Exp

    RELOP      shift, and go to state 90
    SEMI       shift, and go to state 136
    PLUS       shift, and go to state 92
    MINUS      shift, and go to state 93
    STAR       shift, and go to state 94
    DIV        shift, and go to state 95
    ASSIGNOP   shift, and go to state 96
    AND        shift, and go to state 97
    OR         shift, and go to state 98
    INCREMENT  shift, and go to state 99
    DECREMENT  shift, and go to state 100


state 134

   29 Stmt: FOR LP ForCondition RP Stmt .

    $default  reduce using rule 29 (Stmt)


state 135

   27 Stmt: IF LP Exp RP Stmt ELSE . Stmt

    INT        shift, and go to state 50
    ID         shift, and go to state 51
    FLOAT      shift, and go to state 52
    CHAR       shift, and go to state 53
    LP         shift, and go to state 54
    LC         shift, and go to state 24
    MINUS      shift, and go to state 55
    NOT        shift, and go to state 56
    IF         shift, and go to state 57
    WHILE      shift, and go to state 58
    RETURN     shift, and go to state 59
    INCREMENT  shift, and go to state 60
    DECREMENT  shift, and go to state 61
    FOR        shift, and go to state 62
    BREAK      shift, and go to state 63
    CONTINUE   shift, and go to state 64

    CompSt  go to state 65
    Stmt    go to state 137
    Exp     go to state 68


state 136

   69 ForCondition: Exp SEMI Exp SEMI . Exp

    INT        shift, and go to state 50
    ID         shift, and go to state 51
    FLOAT      shift, and go to state 52
    CHAR       shift, and go to state 53
    LP         shift, and go to state 54
    MINUS      shift, and go to state 55
    NOT        shift, and go to state 56
    INCREMENT  shift, and go to state 60
    DECREMENT  shift, and go to state 61
    BREAK      shift, and go to state 63
    CONTINUE   shift, and go to state 64

    Exp  go to state 138


state 137

   27 Stmt: IF LP Exp RP Stmt ELSE Stmt .

    $default  reduce using rule 27 (Stmt)


state 138

   42 Exp: Exp . ASSIGNOP Exp
   43    | Exp . AND Exp
   44    | Exp . OR Exp
   45    | Exp . RELOP Exp
   46    | Exp . PLUS Exp
   47    | Exp . MINUS Exp
   48    | Exp . STAR Exp
   49    | Exp . DIV Exp
   59    | Exp . DECREMENT
   60    | Exp . INCREMENT
   69 ForCondition: Exp SEMI Exp SEMI Exp .

    RELOP      shift, and go to state 90
    PLUS       shift, and go to state 92
    MINUS      shift, and go to state 93
    STAR       shift, and go to state 94
    DIV        shift, and go to state 95
    ASSIGNOP   shift, and go to state 96
    AND        shift, and go to state 97
    OR         shift, and go to state 98
    INCREMENT  shift, and go to state 99
    DECREMENT  shift, and go to state 100

    $default  reduce using rule 69 (ForCondition)
